# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/public/modeldb/versioning/VersioningService.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from ...public.modeldb import CommonService_pb2 as protos_dot_public_dot_modeldb_dot_CommonService__pb2
from ...public.modeldb.versioning import Dataset_pb2 as protos_dot_public_dot_modeldb_dot_versioning_dot_Dataset__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='protos/public/modeldb/versioning/VersioningService.proto',
  package='ai.verta.modeldb.versioning',
  syntax='proto3',
  serialized_options=_b('P\001ZIgithub.com/VertaAI/modeldb/protos/gen/go/protos/public/modeldb/versioning'),
  serialized_pb=_b('\n8protos/public/modeldb/versioning/VersioningService.proto\x12\x1b\x61i.verta.modeldb.versioning\x1a\x1cgoogle/api/annotations.proto\x1a)protos/public/modeldb/CommonService.proto\x1a.protos/public/modeldb/versioning/Dataset.proto\"j\n\x06\x43ommit\x12\x12\n\nparent_ids\x18\x01 \x03(\t\x12;\n\x07\x63ontent\x18\x02 \x01(\x0b\x32*.ai.verta.modeldb.versioning.CommitContent\x12\x0f\n\x07tree_id\x18\x03 \x01(\t\"6\n\rCommitContent\x12\x0f\n\x07message\x18\x01 \x01(\t\x12\x14\n\x0c\x64\x61te_created\x18\x02 \x01(\x04\"\'\n\x0bTreeElement\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\"{\n\x04Tree\x12\x37\n\x05\x62lobs\x18\x01 \x03(\x0b\x32(.ai.verta.modeldb.versioning.TreeElement\x12:\n\x08subtrees\x18\x02 \x03(\x0b\x32(.ai.verta.modeldb.versioning.TreeElement\"N\n\x04\x42lob\x12;\n\x07\x64\x61taset\x18\x01 \x01(\x0b\x32(.ai.verta.modeldb.versioning.DatasetBlobH\x00\x42\t\n\x07\x63ontent\"M\n\x0c\x42lobExpanded\x12\x0c\n\x04path\x18\x01 \x01(\t\x12/\n\x04\x62lob\x18\x02 \x01(\x0b\x32!.ai.verta.modeldb.versioning.Blob\"`\n\x08\x42lobDiff\x12\x0c\n\x04path\x18\x01 \x01(\t\x12;\n\x07\x64\x61taset\x18\x02 \x01(\x0b\x32(.ai.verta.modeldb.versioning.DatasetDiffH\x00\x42\t\n\x07\x63ontent\"\xd7\x01\n\x06\x45ntity\x12\x0e\n\x06sha256\x18\x01 \x01(\t\x12\x15\n\rrepository_id\x18\x02 \x01(\t\x12\x35\n\x06\x63ommit\x18\x03 \x01(\x0b\x32#.ai.verta.modeldb.versioning.CommitH\x00\x12\x31\n\x04tree\x18\x04 \x01(\x0b\x32!.ai.verta.modeldb.versioning.TreeH\x00\x12\x31\n\x04\x62lob\x18\x05 \x01(\x0b\x32!.ai.verta.modeldb.versioning.BlobH\x00\x42\t\n\x07\x63ontent\"\xb3\x01\n\nRepository\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x14\n\x0c\x64\x61te_created\x18\x03 \x01(\x04\x12\x14\n\x0c\x64\x61te_updated\x18\x04 \x01(\x04\x12\x14\n\x0cworkspace_id\x18\x05 \x01(\t\x12I\n\x0eworkspace_type\x18\x06 \x01(\x0e\x32\x31.ai.verta.modeldb.WorkspaceTypeEnum.WorkspaceType\"\x8a\x01\n\rGetRepository\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x16\n\x0eworkspace_name\x18\x03 \x01(\t\x1aG\n\x08Response\x12;\n\nrepository\x18\x01 \x01(\x0b\x32\'.ai.verta.modeldb.versioning.Repository\"\xad\x01\n\rSetRepository\x12;\n\nrepository\x18\x01 \x01(\x0b\x32\'.ai.verta.modeldb.versioning.Repository\x12\x16\n\x0eworkspace_name\x18\x02 \x01(\t\x1aG\n\x08Response\x12;\n\nrepository\x18\x01 \x01(\x0b\x32\'.ai.verta.modeldb.versioning.Repository\"E\n\x10\x44\x65leteRepository\x12\x15\n\rrepository_id\x18\x01 \x01(\t\x1a\x1a\n\x08Response\x12\x0e\n\x06status\x18\x01 \x01(\x08\"x\n\x0e\x42\x61tchGetEntity\x12\x0c\n\x04shas\x18\x01 \x03(\t\x12\x15\n\rrepository_id\x18\x02 \x01(\t\x1a\x41\n\x08Response\x12\x35\n\x08\x65ntities\x18\x01 \x03(\x0b\x32#.ai.verta.modeldb.versioning.Entity\"\x81\x01\n\tAddEntity\x12\x33\n\x06\x65ntity\x18\x01 \x01(\x0b\x32#.ai.verta.modeldb.versioning.Entity\x1a?\n\x08Response\x12\x33\n\x06\x65ntity\x18\x01 \x01(\x0b\x32#.ai.verta.modeldb.versioning.Entity\"Q\n\x0c\x44\x65leteEntity\x12\x0e\n\x06sha256\x18\x01 \x01(\t\x12\x15\n\rrepository_id\x18\x02 \x01(\t\x1a\x1a\n\x08Response\x12\x0e\n\x06status\x18\x01 \x01(\x08\"\xfa\x01\n\x15\x43ommitRepositoryBlobs\x12\x15\n\rrepository_id\x18\x01 \x01(\t\x12\x12\n\nparent_ids\x18\x02 \x03(\t\x12;\n\x07\x63ontent\x18\x03 \x01(\x0b\x32*.ai.verta.modeldb.versioning.CommitContent\x12\x38\n\x05\x62lobs\x18\x04 \x03(\x0b\x32).ai.verta.modeldb.versioning.BlobExpanded\x1a?\n\x08Response\x12\x33\n\x06\x63ommit\x18\x01 \x01(\x0b\x32#.ai.verta.modeldb.versioning.Commit\"\x9e\x01\n\x12GetRepositoryBlobs\x12\x15\n\rrepository_id\x18\x01 \x01(\t\x12\x11\n\tcommit_id\x18\x02 \x01(\t\x12\x18\n\x10glob_path_prefix\x18\x03 \x01(\t\x1a\x44\n\x08Response\x12\x38\n\x05\x62lobs\x18\x01 \x03(\x0b\x32).ai.verta.modeldb.versioning.BlobExpanded\"\xaa\x01\n\x11GetRepositoryDiff\x12\x15\n\rrepository_id\x18\x01 \x01(\t\x12\x10\n\x08\x63ommit_a\x18\x02 \x01(\t\x12\x10\n\x08\x63ommit_b\x18\x03 \x01(\t\x12\x18\n\x10glob_path_prefix\x18\x04 \x01(\t\x1a@\n\x08Response\x12\x34\n\x05\x64iffs\x18\x01 \x03(\x0b\x32%.ai.verta.modeldb.versioning.BlobDiff\"\xd8\x01\n\x10GetRepositoryLog\x12\x15\n\rrepository_id\x18\x01 \x01(\t\x12\x13\n\x0b\x63ommit_base\x18\x02 \x01(\t\x12\x13\n\x0b\x63ommit_head\x18\x03 \x01(\t\x12\x18\n\x10glob_path_prefix\x18\x06 \x01(\t\x12\x13\n\x0bpage_number\x18\x04 \x01(\x05\x12\x12\n\npage_limit\x18\x05 \x01(\x05\x1a@\n\x08Response\x12\x34\n\x07\x63ommits\x18\x01 \x03(\x0b\x32#.ai.verta.modeldb.versioning.Commit\"[\n\x06SetTag\x12\x15\n\rrepository_id\x18\x01 \x01(\t\x12\x0b\n\x03tag\x18\x02 \x01(\t\x12\x11\n\tcommit_id\x18\x03 \x01(\t\x1a\x1a\n\x08Response\x12\x0e\n\x06status\x18\x01 \x01(\x08\"m\n\x06GetTag\x12\x15\n\rrepository_id\x18\x01 \x01(\t\x12\x0b\n\x03tag\x18\x02 \x01(\t\x1a?\n\x08Response\x12\x33\n\x06\x63ommit\x18\x01 \x01(\x0b\x32#.ai.verta.modeldb.versioning.Commit2\xe3\x0e\n\x11VersioningService\x12\x96\x01\n\rgetRepository\x12*.ai.verta.modeldb.versioning.GetRepository\x1a\x33.ai.verta.modeldb.versioning.GetRepository.Response\"$\x82\xd3\xe4\x93\x02\x1e\x12\x1c/v1/versioning/getRepository\x12\x99\x01\n\rsetRepository\x12*.ai.verta.modeldb.versioning.SetRepository\x1a\x33.ai.verta.modeldb.versioning.SetRepository.Response\"\'\x82\xd3\xe4\x93\x02!\"\x1c/v1/versioning/setRepository:\x01*\x12\xa5\x01\n\x10\x64\x65leteRepository\x12-.ai.verta.modeldb.versioning.DeleteRepository\x1a\x36.ai.verta.modeldb.versioning.DeleteRepository.Response\"*\x82\xd3\xe4\x93\x02$\"\x1f/v1/versioning/deleteRepository:\x01*\x12\xb9\x01\n\x15\x63ommitRepositoryBlobs\x12\x32.ai.verta.modeldb.versioning.CommitRepositoryBlobs\x1a;.ai.verta.modeldb.versioning.CommitRepositoryBlobs.Response\"/\x82\xd3\xe4\x93\x02)\"$/v1/versioning/commitRepositoryBlobs:\x01*\x12\xaa\x01\n\x12getRepositoryBlobs\x12/.ai.verta.modeldb.versioning.GetRepositoryBlobs\x1a\x38.ai.verta.modeldb.versioning.GetRepositoryBlobs.Response\")\x82\xd3\xe4\x93\x02#\x12!/v1/versioning/getRepositoryBlobs\x12\x9a\x01\n\x0e\x62\x61tchGetEntity\x12+.ai.verta.modeldb.versioning.BatchGetEntity\x1a\x34.ai.verta.modeldb.versioning.BatchGetEntity.Response\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/v1/versioning/batchGetEntity\x12\x89\x01\n\taddEntity\x12&.ai.verta.modeldb.versioning.AddEntity\x1a/.ai.verta.modeldb.versioning.AddEntity.Response\"#\x82\xd3\xe4\x93\x02\x1d\"\x18/v1/versioning/addEntity:\x01*\x12\x95\x01\n\x0c\x64\x65leteEntity\x12).ai.verta.modeldb.versioning.DeleteEntity\x1a\x32.ai.verta.modeldb.versioning.DeleteEntity.Response\"&\x82\xd3\xe4\x93\x02 \"\x1b/v1/versioning/deleteEntity:\x01*\x12\xa6\x01\n\x11getRepositoryDiff\x12..ai.verta.modeldb.versioning.GetRepositoryDiff\x1a\x37.ai.verta.modeldb.versioning.GetRepositoryDiff.Response\"(\x82\xd3\xe4\x93\x02\"\x12 /v1/versioning/getRepositoryDiff\x12\xa2\x01\n\x10getRepositoryLog\x12-.ai.verta.modeldb.versioning.GetRepositoryLog\x1a\x36.ai.verta.modeldb.versioning.GetRepositoryLog.Response\"\'\x82\xd3\xe4\x93\x02!\x12\x1f/v1/versioning/getRepositoryLog\x12}\n\x06setTag\x12#.ai.verta.modeldb.versioning.SetTag\x1a,.ai.verta.modeldb.versioning.SetTag.Response\" \x82\xd3\xe4\x93\x02\x1a\"\x15/v1/versioning/setTag:\x01*\x12z\n\x06getTag\x12#.ai.verta.modeldb.versioning.GetTag\x1a,.ai.verta.modeldb.versioning.GetTag.Response\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/v1/versioning/getTagBMP\x01ZIgithub.com/VertaAI/modeldb/protos/gen/go/protos/public/modeldb/versioningb\x06proto3')
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,protos_dot_public_dot_modeldb_dot_CommonService__pb2.DESCRIPTOR,protos_dot_public_dot_modeldb_dot_versioning_dot_Dataset__pb2.DESCRIPTOR,])




_COMMIT = _descriptor.Descriptor(
  name='Commit',
  full_name='ai.verta.modeldb.versioning.Commit',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parent_ids', full_name='ai.verta.modeldb.versioning.Commit.parent_ids', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='content', full_name='ai.verta.modeldb.versioning.Commit.content', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tree_id', full_name='ai.verta.modeldb.versioning.Commit.tree_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=210,
  serialized_end=316,
)


_COMMITCONTENT = _descriptor.Descriptor(
  name='CommitContent',
  full_name='ai.verta.modeldb.versioning.CommitContent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='ai.verta.modeldb.versioning.CommitContent.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='date_created', full_name='ai.verta.modeldb.versioning.CommitContent.date_created', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=318,
  serialized_end=372,
)


_TREEELEMENT = _descriptor.Descriptor(
  name='TreeElement',
  full_name='ai.verta.modeldb.versioning.TreeElement',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ai.verta.modeldb.versioning.TreeElement.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='ai.verta.modeldb.versioning.TreeElement.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=374,
  serialized_end=413,
)


_TREE = _descriptor.Descriptor(
  name='Tree',
  full_name='ai.verta.modeldb.versioning.Tree',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='blobs', full_name='ai.verta.modeldb.versioning.Tree.blobs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='subtrees', full_name='ai.verta.modeldb.versioning.Tree.subtrees', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=415,
  serialized_end=538,
)


_BLOB = _descriptor.Descriptor(
  name='Blob',
  full_name='ai.verta.modeldb.versioning.Blob',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dataset', full_name='ai.verta.modeldb.versioning.Blob.dataset', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='content', full_name='ai.verta.modeldb.versioning.Blob.content',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=540,
  serialized_end=618,
)


_BLOBEXPANDED = _descriptor.Descriptor(
  name='BlobExpanded',
  full_name='ai.verta.modeldb.versioning.BlobExpanded',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='ai.verta.modeldb.versioning.BlobExpanded.path', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='blob', full_name='ai.verta.modeldb.versioning.BlobExpanded.blob', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=620,
  serialized_end=697,
)


_BLOBDIFF = _descriptor.Descriptor(
  name='BlobDiff',
  full_name='ai.verta.modeldb.versioning.BlobDiff',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='ai.verta.modeldb.versioning.BlobDiff.path', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dataset', full_name='ai.verta.modeldb.versioning.BlobDiff.dataset', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='content', full_name='ai.verta.modeldb.versioning.BlobDiff.content',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=699,
  serialized_end=795,
)


_ENTITY = _descriptor.Descriptor(
  name='Entity',
  full_name='ai.verta.modeldb.versioning.Entity',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sha256', full_name='ai.verta.modeldb.versioning.Entity.sha256', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='ai.verta.modeldb.versioning.Entity.repository_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit', full_name='ai.verta.modeldb.versioning.Entity.commit', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tree', full_name='ai.verta.modeldb.versioning.Entity.tree', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='blob', full_name='ai.verta.modeldb.versioning.Entity.blob', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='content', full_name='ai.verta.modeldb.versioning.Entity.content',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=798,
  serialized_end=1013,
)


_REPOSITORY = _descriptor.Descriptor(
  name='Repository',
  full_name='ai.verta.modeldb.versioning.Repository',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ai.verta.modeldb.versioning.Repository.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='ai.verta.modeldb.versioning.Repository.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='date_created', full_name='ai.verta.modeldb.versioning.Repository.date_created', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='date_updated', full_name='ai.verta.modeldb.versioning.Repository.date_updated', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='workspace_id', full_name='ai.verta.modeldb.versioning.Repository.workspace_id', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='workspace_type', full_name='ai.verta.modeldb.versioning.Repository.workspace_type', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1016,
  serialized_end=1195,
)


_GETREPOSITORY_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.GetRepository.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='ai.verta.modeldb.versioning.GetRepository.Response.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1265,
  serialized_end=1336,
)

_GETREPOSITORY = _descriptor.Descriptor(
  name='GetRepository',
  full_name='ai.verta.modeldb.versioning.GetRepository',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ai.verta.modeldb.versioning.GetRepository.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='ai.verta.modeldb.versioning.GetRepository.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='workspace_name', full_name='ai.verta.modeldb.versioning.GetRepository.workspace_name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_GETREPOSITORY_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1198,
  serialized_end=1336,
)


_SETREPOSITORY_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.SetRepository.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='ai.verta.modeldb.versioning.SetRepository.Response.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1265,
  serialized_end=1336,
)

_SETREPOSITORY = _descriptor.Descriptor(
  name='SetRepository',
  full_name='ai.verta.modeldb.versioning.SetRepository',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='ai.verta.modeldb.versioning.SetRepository.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='workspace_name', full_name='ai.verta.modeldb.versioning.SetRepository.workspace_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_SETREPOSITORY_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1339,
  serialized_end=1512,
)


_DELETEREPOSITORY_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.DeleteRepository.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='ai.verta.modeldb.versioning.DeleteRepository.Response.status', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1557,
  serialized_end=1583,
)

_DELETEREPOSITORY = _descriptor.Descriptor(
  name='DeleteRepository',
  full_name='ai.verta.modeldb.versioning.DeleteRepository',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='ai.verta.modeldb.versioning.DeleteRepository.repository_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_DELETEREPOSITORY_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1514,
  serialized_end=1583,
)


_BATCHGETENTITY_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.BatchGetEntity.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='entities', full_name='ai.verta.modeldb.versioning.BatchGetEntity.Response.entities', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1640,
  serialized_end=1705,
)

_BATCHGETENTITY = _descriptor.Descriptor(
  name='BatchGetEntity',
  full_name='ai.verta.modeldb.versioning.BatchGetEntity',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='shas', full_name='ai.verta.modeldb.versioning.BatchGetEntity.shas', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='ai.verta.modeldb.versioning.BatchGetEntity.repository_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_BATCHGETENTITY_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1585,
  serialized_end=1705,
)


_ADDENTITY_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.AddEntity.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='entity', full_name='ai.verta.modeldb.versioning.AddEntity.Response.entity', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1774,
  serialized_end=1837,
)

_ADDENTITY = _descriptor.Descriptor(
  name='AddEntity',
  full_name='ai.verta.modeldb.versioning.AddEntity',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='entity', full_name='ai.verta.modeldb.versioning.AddEntity.entity', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_ADDENTITY_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1708,
  serialized_end=1837,
)


_DELETEENTITY_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.DeleteEntity.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='ai.verta.modeldb.versioning.DeleteEntity.Response.status', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1557,
  serialized_end=1583,
)

_DELETEENTITY = _descriptor.Descriptor(
  name='DeleteEntity',
  full_name='ai.verta.modeldb.versioning.DeleteEntity',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sha256', full_name='ai.verta.modeldb.versioning.DeleteEntity.sha256', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='ai.verta.modeldb.versioning.DeleteEntity.repository_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_DELETEENTITY_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1839,
  serialized_end=1920,
)


_COMMITREPOSITORYBLOBS_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.CommitRepositoryBlobs.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit', full_name='ai.verta.modeldb.versioning.CommitRepositoryBlobs.Response.commit', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2110,
  serialized_end=2173,
)

_COMMITREPOSITORYBLOBS = _descriptor.Descriptor(
  name='CommitRepositoryBlobs',
  full_name='ai.verta.modeldb.versioning.CommitRepositoryBlobs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='ai.verta.modeldb.versioning.CommitRepositoryBlobs.repository_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='parent_ids', full_name='ai.verta.modeldb.versioning.CommitRepositoryBlobs.parent_ids', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='content', full_name='ai.verta.modeldb.versioning.CommitRepositoryBlobs.content', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='blobs', full_name='ai.verta.modeldb.versioning.CommitRepositoryBlobs.blobs', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_COMMITREPOSITORYBLOBS_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1923,
  serialized_end=2173,
)


_GETREPOSITORYBLOBS_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.GetRepositoryBlobs.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='blobs', full_name='ai.verta.modeldb.versioning.GetRepositoryBlobs.Response.blobs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2266,
  serialized_end=2334,
)

_GETREPOSITORYBLOBS = _descriptor.Descriptor(
  name='GetRepositoryBlobs',
  full_name='ai.verta.modeldb.versioning.GetRepositoryBlobs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='ai.verta.modeldb.versioning.GetRepositoryBlobs.repository_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_id', full_name='ai.verta.modeldb.versioning.GetRepositoryBlobs.commit_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='glob_path_prefix', full_name='ai.verta.modeldb.versioning.GetRepositoryBlobs.glob_path_prefix', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_GETREPOSITORYBLOBS_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2176,
  serialized_end=2334,
)


_GETREPOSITORYDIFF_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.GetRepositoryDiff.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='diffs', full_name='ai.verta.modeldb.versioning.GetRepositoryDiff.Response.diffs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2443,
  serialized_end=2507,
)

_GETREPOSITORYDIFF = _descriptor.Descriptor(
  name='GetRepositoryDiff',
  full_name='ai.verta.modeldb.versioning.GetRepositoryDiff',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='ai.verta.modeldb.versioning.GetRepositoryDiff.repository_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_a', full_name='ai.verta.modeldb.versioning.GetRepositoryDiff.commit_a', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_b', full_name='ai.verta.modeldb.versioning.GetRepositoryDiff.commit_b', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='glob_path_prefix', full_name='ai.verta.modeldb.versioning.GetRepositoryDiff.glob_path_prefix', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_GETREPOSITORYDIFF_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2337,
  serialized_end=2507,
)


_GETREPOSITORYLOG_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.GetRepositoryLog.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='commits', full_name='ai.verta.modeldb.versioning.GetRepositoryLog.Response.commits', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2662,
  serialized_end=2726,
)

_GETREPOSITORYLOG = _descriptor.Descriptor(
  name='GetRepositoryLog',
  full_name='ai.verta.modeldb.versioning.GetRepositoryLog',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='ai.verta.modeldb.versioning.GetRepositoryLog.repository_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_base', full_name='ai.verta.modeldb.versioning.GetRepositoryLog.commit_base', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_head', full_name='ai.verta.modeldb.versioning.GetRepositoryLog.commit_head', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='glob_path_prefix', full_name='ai.verta.modeldb.versioning.GetRepositoryLog.glob_path_prefix', index=3,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='page_number', full_name='ai.verta.modeldb.versioning.GetRepositoryLog.page_number', index=4,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='page_limit', full_name='ai.verta.modeldb.versioning.GetRepositoryLog.page_limit', index=5,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_GETREPOSITORYLOG_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2510,
  serialized_end=2726,
)


_SETTAG_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.SetTag.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='ai.verta.modeldb.versioning.SetTag.Response.status', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1557,
  serialized_end=1583,
)

_SETTAG = _descriptor.Descriptor(
  name='SetTag',
  full_name='ai.verta.modeldb.versioning.SetTag',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='ai.verta.modeldb.versioning.SetTag.repository_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tag', full_name='ai.verta.modeldb.versioning.SetTag.tag', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_id', full_name='ai.verta.modeldb.versioning.SetTag.commit_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_SETTAG_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2728,
  serialized_end=2819,
)


_GETTAG_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.GetTag.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit', full_name='ai.verta.modeldb.versioning.GetTag.Response.commit', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2110,
  serialized_end=2173,
)

_GETTAG = _descriptor.Descriptor(
  name='GetTag',
  full_name='ai.verta.modeldb.versioning.GetTag',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='ai.verta.modeldb.versioning.GetTag.repository_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tag', full_name='ai.verta.modeldb.versioning.GetTag.tag', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_GETTAG_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2821,
  serialized_end=2930,
)

_COMMIT.fields_by_name['content'].message_type = _COMMITCONTENT
_TREE.fields_by_name['blobs'].message_type = _TREEELEMENT
_TREE.fields_by_name['subtrees'].message_type = _TREEELEMENT
_BLOB.fields_by_name['dataset'].message_type = protos_dot_public_dot_modeldb_dot_versioning_dot_Dataset__pb2._DATASETBLOB
_BLOB.oneofs_by_name['content'].fields.append(
  _BLOB.fields_by_name['dataset'])
_BLOB.fields_by_name['dataset'].containing_oneof = _BLOB.oneofs_by_name['content']
_BLOBEXPANDED.fields_by_name['blob'].message_type = _BLOB
_BLOBDIFF.fields_by_name['dataset'].message_type = protos_dot_public_dot_modeldb_dot_versioning_dot_Dataset__pb2._DATASETDIFF
_BLOBDIFF.oneofs_by_name['content'].fields.append(
  _BLOBDIFF.fields_by_name['dataset'])
_BLOBDIFF.fields_by_name['dataset'].containing_oneof = _BLOBDIFF.oneofs_by_name['content']
_ENTITY.fields_by_name['commit'].message_type = _COMMIT
_ENTITY.fields_by_name['tree'].message_type = _TREE
_ENTITY.fields_by_name['blob'].message_type = _BLOB
_ENTITY.oneofs_by_name['content'].fields.append(
  _ENTITY.fields_by_name['commit'])
_ENTITY.fields_by_name['commit'].containing_oneof = _ENTITY.oneofs_by_name['content']
_ENTITY.oneofs_by_name['content'].fields.append(
  _ENTITY.fields_by_name['tree'])
_ENTITY.fields_by_name['tree'].containing_oneof = _ENTITY.oneofs_by_name['content']
_ENTITY.oneofs_by_name['content'].fields.append(
  _ENTITY.fields_by_name['blob'])
_ENTITY.fields_by_name['blob'].containing_oneof = _ENTITY.oneofs_by_name['content']
_REPOSITORY.fields_by_name['workspace_type'].enum_type = protos_dot_public_dot_modeldb_dot_CommonService__pb2._WORKSPACETYPEENUM_WORKSPACETYPE
_GETREPOSITORY_RESPONSE.fields_by_name['repository'].message_type = _REPOSITORY
_GETREPOSITORY_RESPONSE.containing_type = _GETREPOSITORY
_SETREPOSITORY_RESPONSE.fields_by_name['repository'].message_type = _REPOSITORY
_SETREPOSITORY_RESPONSE.containing_type = _SETREPOSITORY
_SETREPOSITORY.fields_by_name['repository'].message_type = _REPOSITORY
_DELETEREPOSITORY_RESPONSE.containing_type = _DELETEREPOSITORY
_BATCHGETENTITY_RESPONSE.fields_by_name['entities'].message_type = _ENTITY
_BATCHGETENTITY_RESPONSE.containing_type = _BATCHGETENTITY
_ADDENTITY_RESPONSE.fields_by_name['entity'].message_type = _ENTITY
_ADDENTITY_RESPONSE.containing_type = _ADDENTITY
_ADDENTITY.fields_by_name['entity'].message_type = _ENTITY
_DELETEENTITY_RESPONSE.containing_type = _DELETEENTITY
_COMMITREPOSITORYBLOBS_RESPONSE.fields_by_name['commit'].message_type = _COMMIT
_COMMITREPOSITORYBLOBS_RESPONSE.containing_type = _COMMITREPOSITORYBLOBS
_COMMITREPOSITORYBLOBS.fields_by_name['content'].message_type = _COMMITCONTENT
_COMMITREPOSITORYBLOBS.fields_by_name['blobs'].message_type = _BLOBEXPANDED
_GETREPOSITORYBLOBS_RESPONSE.fields_by_name['blobs'].message_type = _BLOBEXPANDED
_GETREPOSITORYBLOBS_RESPONSE.containing_type = _GETREPOSITORYBLOBS
_GETREPOSITORYDIFF_RESPONSE.fields_by_name['diffs'].message_type = _BLOBDIFF
_GETREPOSITORYDIFF_RESPONSE.containing_type = _GETREPOSITORYDIFF
_GETREPOSITORYLOG_RESPONSE.fields_by_name['commits'].message_type = _COMMIT
_GETREPOSITORYLOG_RESPONSE.containing_type = _GETREPOSITORYLOG
_SETTAG_RESPONSE.containing_type = _SETTAG
_GETTAG_RESPONSE.fields_by_name['commit'].message_type = _COMMIT
_GETTAG_RESPONSE.containing_type = _GETTAG
DESCRIPTOR.message_types_by_name['Commit'] = _COMMIT
DESCRIPTOR.message_types_by_name['CommitContent'] = _COMMITCONTENT
DESCRIPTOR.message_types_by_name['TreeElement'] = _TREEELEMENT
DESCRIPTOR.message_types_by_name['Tree'] = _TREE
DESCRIPTOR.message_types_by_name['Blob'] = _BLOB
DESCRIPTOR.message_types_by_name['BlobExpanded'] = _BLOBEXPANDED
DESCRIPTOR.message_types_by_name['BlobDiff'] = _BLOBDIFF
DESCRIPTOR.message_types_by_name['Entity'] = _ENTITY
DESCRIPTOR.message_types_by_name['Repository'] = _REPOSITORY
DESCRIPTOR.message_types_by_name['GetRepository'] = _GETREPOSITORY
DESCRIPTOR.message_types_by_name['SetRepository'] = _SETREPOSITORY
DESCRIPTOR.message_types_by_name['DeleteRepository'] = _DELETEREPOSITORY
DESCRIPTOR.message_types_by_name['BatchGetEntity'] = _BATCHGETENTITY
DESCRIPTOR.message_types_by_name['AddEntity'] = _ADDENTITY
DESCRIPTOR.message_types_by_name['DeleteEntity'] = _DELETEENTITY
DESCRIPTOR.message_types_by_name['CommitRepositoryBlobs'] = _COMMITREPOSITORYBLOBS
DESCRIPTOR.message_types_by_name['GetRepositoryBlobs'] = _GETREPOSITORYBLOBS
DESCRIPTOR.message_types_by_name['GetRepositoryDiff'] = _GETREPOSITORYDIFF
DESCRIPTOR.message_types_by_name['GetRepositoryLog'] = _GETREPOSITORYLOG
DESCRIPTOR.message_types_by_name['SetTag'] = _SETTAG
DESCRIPTOR.message_types_by_name['GetTag'] = _GETTAG
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Commit = _reflection.GeneratedProtocolMessageType('Commit', (_message.Message,), dict(
  DESCRIPTOR = _COMMIT,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.Commit)
  ))
_sym_db.RegisterMessage(Commit)

CommitContent = _reflection.GeneratedProtocolMessageType('CommitContent', (_message.Message,), dict(
  DESCRIPTOR = _COMMITCONTENT,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.CommitContent)
  ))
_sym_db.RegisterMessage(CommitContent)

TreeElement = _reflection.GeneratedProtocolMessageType('TreeElement', (_message.Message,), dict(
  DESCRIPTOR = _TREEELEMENT,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.TreeElement)
  ))
_sym_db.RegisterMessage(TreeElement)

Tree = _reflection.GeneratedProtocolMessageType('Tree', (_message.Message,), dict(
  DESCRIPTOR = _TREE,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.Tree)
  ))
_sym_db.RegisterMessage(Tree)

Blob = _reflection.GeneratedProtocolMessageType('Blob', (_message.Message,), dict(
  DESCRIPTOR = _BLOB,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.Blob)
  ))
_sym_db.RegisterMessage(Blob)

BlobExpanded = _reflection.GeneratedProtocolMessageType('BlobExpanded', (_message.Message,), dict(
  DESCRIPTOR = _BLOBEXPANDED,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.BlobExpanded)
  ))
_sym_db.RegisterMessage(BlobExpanded)

BlobDiff = _reflection.GeneratedProtocolMessageType('BlobDiff', (_message.Message,), dict(
  DESCRIPTOR = _BLOBDIFF,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.BlobDiff)
  ))
_sym_db.RegisterMessage(BlobDiff)

Entity = _reflection.GeneratedProtocolMessageType('Entity', (_message.Message,), dict(
  DESCRIPTOR = _ENTITY,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.Entity)
  ))
_sym_db.RegisterMessage(Entity)

Repository = _reflection.GeneratedProtocolMessageType('Repository', (_message.Message,), dict(
  DESCRIPTOR = _REPOSITORY,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.Repository)
  ))
_sym_db.RegisterMessage(Repository)

GetRepository = _reflection.GeneratedProtocolMessageType('GetRepository', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _GETREPOSITORY_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.GetRepository.Response)
    ))
  ,
  DESCRIPTOR = _GETREPOSITORY,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.GetRepository)
  ))
_sym_db.RegisterMessage(GetRepository)
_sym_db.RegisterMessage(GetRepository.Response)

SetRepository = _reflection.GeneratedProtocolMessageType('SetRepository', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _SETREPOSITORY_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.SetRepository.Response)
    ))
  ,
  DESCRIPTOR = _SETREPOSITORY,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.SetRepository)
  ))
_sym_db.RegisterMessage(SetRepository)
_sym_db.RegisterMessage(SetRepository.Response)

DeleteRepository = _reflection.GeneratedProtocolMessageType('DeleteRepository', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _DELETEREPOSITORY_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.DeleteRepository.Response)
    ))
  ,
  DESCRIPTOR = _DELETEREPOSITORY,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.DeleteRepository)
  ))
_sym_db.RegisterMessage(DeleteRepository)
_sym_db.RegisterMessage(DeleteRepository.Response)

BatchGetEntity = _reflection.GeneratedProtocolMessageType('BatchGetEntity', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _BATCHGETENTITY_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.BatchGetEntity.Response)
    ))
  ,
  DESCRIPTOR = _BATCHGETENTITY,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.BatchGetEntity)
  ))
_sym_db.RegisterMessage(BatchGetEntity)
_sym_db.RegisterMessage(BatchGetEntity.Response)

AddEntity = _reflection.GeneratedProtocolMessageType('AddEntity', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _ADDENTITY_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.AddEntity.Response)
    ))
  ,
  DESCRIPTOR = _ADDENTITY,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.AddEntity)
  ))
_sym_db.RegisterMessage(AddEntity)
_sym_db.RegisterMessage(AddEntity.Response)

DeleteEntity = _reflection.GeneratedProtocolMessageType('DeleteEntity', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _DELETEENTITY_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.DeleteEntity.Response)
    ))
  ,
  DESCRIPTOR = _DELETEENTITY,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.DeleteEntity)
  ))
_sym_db.RegisterMessage(DeleteEntity)
_sym_db.RegisterMessage(DeleteEntity.Response)

CommitRepositoryBlobs = _reflection.GeneratedProtocolMessageType('CommitRepositoryBlobs', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _COMMITREPOSITORYBLOBS_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.CommitRepositoryBlobs.Response)
    ))
  ,
  DESCRIPTOR = _COMMITREPOSITORYBLOBS,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.CommitRepositoryBlobs)
  ))
_sym_db.RegisterMessage(CommitRepositoryBlobs)
_sym_db.RegisterMessage(CommitRepositoryBlobs.Response)

GetRepositoryBlobs = _reflection.GeneratedProtocolMessageType('GetRepositoryBlobs', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _GETREPOSITORYBLOBS_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.GetRepositoryBlobs.Response)
    ))
  ,
  DESCRIPTOR = _GETREPOSITORYBLOBS,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.GetRepositoryBlobs)
  ))
_sym_db.RegisterMessage(GetRepositoryBlobs)
_sym_db.RegisterMessage(GetRepositoryBlobs.Response)

GetRepositoryDiff = _reflection.GeneratedProtocolMessageType('GetRepositoryDiff', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _GETREPOSITORYDIFF_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.GetRepositoryDiff.Response)
    ))
  ,
  DESCRIPTOR = _GETREPOSITORYDIFF,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.GetRepositoryDiff)
  ))
_sym_db.RegisterMessage(GetRepositoryDiff)
_sym_db.RegisterMessage(GetRepositoryDiff.Response)

GetRepositoryLog = _reflection.GeneratedProtocolMessageType('GetRepositoryLog', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _GETREPOSITORYLOG_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.GetRepositoryLog.Response)
    ))
  ,
  DESCRIPTOR = _GETREPOSITORYLOG,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.GetRepositoryLog)
  ))
_sym_db.RegisterMessage(GetRepositoryLog)
_sym_db.RegisterMessage(GetRepositoryLog.Response)

SetTag = _reflection.GeneratedProtocolMessageType('SetTag', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _SETTAG_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.SetTag.Response)
    ))
  ,
  DESCRIPTOR = _SETTAG,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.SetTag)
  ))
_sym_db.RegisterMessage(SetTag)
_sym_db.RegisterMessage(SetTag.Response)

GetTag = _reflection.GeneratedProtocolMessageType('GetTag', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _GETTAG_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.GetTag.Response)
    ))
  ,
  DESCRIPTOR = _GETTAG,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.GetTag)
  ))
_sym_db.RegisterMessage(GetTag)
_sym_db.RegisterMessage(GetTag.Response)


DESCRIPTOR._options = None

_VERSIONINGSERVICE = _descriptor.ServiceDescriptor(
  name='VersioningService',
  full_name='ai.verta.modeldb.versioning.VersioningService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=2933,
  serialized_end=4824,
  methods=[
  _descriptor.MethodDescriptor(
    name='getRepository',
    full_name='ai.verta.modeldb.versioning.VersioningService.getRepository',
    index=0,
    containing_service=None,
    input_type=_GETREPOSITORY,
    output_type=_GETREPOSITORY_RESPONSE,
    serialized_options=_b('\202\323\344\223\002\036\022\034/v1/versioning/getRepository'),
  ),
  _descriptor.MethodDescriptor(
    name='setRepository',
    full_name='ai.verta.modeldb.versioning.VersioningService.setRepository',
    index=1,
    containing_service=None,
    input_type=_SETREPOSITORY,
    output_type=_SETREPOSITORY_RESPONSE,
    serialized_options=_b('\202\323\344\223\002!\"\034/v1/versioning/setRepository:\001*'),
  ),
  _descriptor.MethodDescriptor(
    name='deleteRepository',
    full_name='ai.verta.modeldb.versioning.VersioningService.deleteRepository',
    index=2,
    containing_service=None,
    input_type=_DELETEREPOSITORY,
    output_type=_DELETEREPOSITORY_RESPONSE,
    serialized_options=_b('\202\323\344\223\002$\"\037/v1/versioning/deleteRepository:\001*'),
  ),
  _descriptor.MethodDescriptor(
    name='commitRepositoryBlobs',
    full_name='ai.verta.modeldb.versioning.VersioningService.commitRepositoryBlobs',
    index=3,
    containing_service=None,
    input_type=_COMMITREPOSITORYBLOBS,
    output_type=_COMMITREPOSITORYBLOBS_RESPONSE,
    serialized_options=_b('\202\323\344\223\002)\"$/v1/versioning/commitRepositoryBlobs:\001*'),
  ),
  _descriptor.MethodDescriptor(
    name='getRepositoryBlobs',
    full_name='ai.verta.modeldb.versioning.VersioningService.getRepositoryBlobs',
    index=4,
    containing_service=None,
    input_type=_GETREPOSITORYBLOBS,
    output_type=_GETREPOSITORYBLOBS_RESPONSE,
    serialized_options=_b('\202\323\344\223\002#\022!/v1/versioning/getRepositoryBlobs'),
  ),
  _descriptor.MethodDescriptor(
    name='batchGetEntity',
    full_name='ai.verta.modeldb.versioning.VersioningService.batchGetEntity',
    index=5,
    containing_service=None,
    input_type=_BATCHGETENTITY,
    output_type=_BATCHGETENTITY_RESPONSE,
    serialized_options=_b('\202\323\344\223\002\037\022\035/v1/versioning/batchGetEntity'),
  ),
  _descriptor.MethodDescriptor(
    name='addEntity',
    full_name='ai.verta.modeldb.versioning.VersioningService.addEntity',
    index=6,
    containing_service=None,
    input_type=_ADDENTITY,
    output_type=_ADDENTITY_RESPONSE,
    serialized_options=_b('\202\323\344\223\002\035\"\030/v1/versioning/addEntity:\001*'),
  ),
  _descriptor.MethodDescriptor(
    name='deleteEntity',
    full_name='ai.verta.modeldb.versioning.VersioningService.deleteEntity',
    index=7,
    containing_service=None,
    input_type=_DELETEENTITY,
    output_type=_DELETEENTITY_RESPONSE,
    serialized_options=_b('\202\323\344\223\002 \"\033/v1/versioning/deleteEntity:\001*'),
  ),
  _descriptor.MethodDescriptor(
    name='getRepositoryDiff',
    full_name='ai.verta.modeldb.versioning.VersioningService.getRepositoryDiff',
    index=8,
    containing_service=None,
    input_type=_GETREPOSITORYDIFF,
    output_type=_GETREPOSITORYDIFF_RESPONSE,
    serialized_options=_b('\202\323\344\223\002\"\022 /v1/versioning/getRepositoryDiff'),
  ),
  _descriptor.MethodDescriptor(
    name='getRepositoryLog',
    full_name='ai.verta.modeldb.versioning.VersioningService.getRepositoryLog',
    index=9,
    containing_service=None,
    input_type=_GETREPOSITORYLOG,
    output_type=_GETREPOSITORYLOG_RESPONSE,
    serialized_options=_b('\202\323\344\223\002!\022\037/v1/versioning/getRepositoryLog'),
  ),
  _descriptor.MethodDescriptor(
    name='setTag',
    full_name='ai.verta.modeldb.versioning.VersioningService.setTag',
    index=10,
    containing_service=None,
    input_type=_SETTAG,
    output_type=_SETTAG_RESPONSE,
    serialized_options=_b('\202\323\344\223\002\032\"\025/v1/versioning/setTag:\001*'),
  ),
  _descriptor.MethodDescriptor(
    name='getTag',
    full_name='ai.verta.modeldb.versioning.VersioningService.getTag',
    index=11,
    containing_service=None,
    input_type=_GETTAG,
    output_type=_GETTAG_RESPONSE,
    serialized_options=_b('\202\323\344\223\002\027\022\025/v1/versioning/getTag'),
  ),
])
_sym_db.RegisterServiceDescriptor(_VERSIONINGSERVICE)

DESCRIPTOR.services_by_name['VersioningService'] = _VERSIONINGSERVICE

# @@protoc_insertion_point(module_scope)
