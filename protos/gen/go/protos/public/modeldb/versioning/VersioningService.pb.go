// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/public/modeldb/versioning/VersioningService.proto

package versioning

import (
	context "context"
	fmt "fmt"
	modeldb "github.com/VertaAI/modeldb/protos/gen/go/protos/public/modeldb"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Base commit for the versioning system
type Commit struct {
	ParentIds            []string       `protobuf:"bytes,1,rep,name=parent_ids,json=parentIds,proto3" json:"parent_ids,omitempty"`
	Content              *CommitContent `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	TreeId               string         `protobuf:"bytes,3,opt,name=tree_id,json=treeId,proto3" json:"tree_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Commit) Reset()         { *m = Commit{} }
func (m *Commit) String() string { return proto.CompactTextString(m) }
func (*Commit) ProtoMessage()    {}
func (*Commit) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{0}
}

func (m *Commit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Commit.Unmarshal(m, b)
}
func (m *Commit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Commit.Marshal(b, m, deterministic)
}
func (m *Commit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Commit.Merge(m, src)
}
func (m *Commit) XXX_Size() int {
	return xxx_messageInfo_Commit.Size(m)
}
func (m *Commit) XXX_DiscardUnknown() {
	xxx_messageInfo_Commit.DiscardUnknown(m)
}

var xxx_messageInfo_Commit proto.InternalMessageInfo

func (m *Commit) GetParentIds() []string {
	if m != nil {
		return m.ParentIds
	}
	return nil
}

func (m *Commit) GetContent() *CommitContent {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Commit) GetTreeId() string {
	if m != nil {
		return m.TreeId
	}
	return ""
}

type CommitContent struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	DateCreated          uint64   `protobuf:"varint,2,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitContent) Reset()         { *m = CommitContent{} }
func (m *CommitContent) String() string { return proto.CompactTextString(m) }
func (*CommitContent) ProtoMessage()    {}
func (*CommitContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{1}
}

func (m *CommitContent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitContent.Unmarshal(m, b)
}
func (m *CommitContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitContent.Marshal(b, m, deterministic)
}
func (m *CommitContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitContent.Merge(m, src)
}
func (m *CommitContent) XXX_Size() int {
	return xxx_messageInfo_CommitContent.Size(m)
}
func (m *CommitContent) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitContent.DiscardUnknown(m)
}

var xxx_messageInfo_CommitContent proto.InternalMessageInfo

func (m *CommitContent) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CommitContent) GetDateCreated() uint64 {
	if m != nil {
		return m.DateCreated
	}
	return 0
}

type TreeElement struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TreeElement) Reset()         { *m = TreeElement{} }
func (m *TreeElement) String() string { return proto.CompactTextString(m) }
func (*TreeElement) ProtoMessage()    {}
func (*TreeElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{2}
}

func (m *TreeElement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TreeElement.Unmarshal(m, b)
}
func (m *TreeElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TreeElement.Marshal(b, m, deterministic)
}
func (m *TreeElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TreeElement.Merge(m, src)
}
func (m *TreeElement) XXX_Size() int {
	return xxx_messageInfo_TreeElement.Size(m)
}
func (m *TreeElement) XXX_DiscardUnknown() {
	xxx_messageInfo_TreeElement.DiscardUnknown(m)
}

var xxx_messageInfo_TreeElement proto.InternalMessageInfo

func (m *TreeElement) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TreeElement) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Tree struct {
	Blobs                []*TreeElement `protobuf:"bytes,1,rep,name=blobs,proto3" json:"blobs,omitempty"`
	Subtrees             []*TreeElement `protobuf:"bytes,2,rep,name=subtrees,proto3" json:"subtrees,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Tree) Reset()         { *m = Tree{} }
func (m *Tree) String() string { return proto.CompactTextString(m) }
func (*Tree) ProtoMessage()    {}
func (*Tree) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{3}
}

func (m *Tree) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tree.Unmarshal(m, b)
}
func (m *Tree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tree.Marshal(b, m, deterministic)
}
func (m *Tree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tree.Merge(m, src)
}
func (m *Tree) XXX_Size() int {
	return xxx_messageInfo_Tree.Size(m)
}
func (m *Tree) XXX_DiscardUnknown() {
	xxx_messageInfo_Tree.DiscardUnknown(m)
}

var xxx_messageInfo_Tree proto.InternalMessageInfo

func (m *Tree) GetBlobs() []*TreeElement {
	if m != nil {
		return m.Blobs
	}
	return nil
}

func (m *Tree) GetSubtrees() []*TreeElement {
	if m != nil {
		return m.Subtrees
	}
	return nil
}

type Blob struct {
	// Types that are valid to be assigned to Content:
	//	*Blob_Dataset
	Content              isBlob_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Blob) Reset()         { *m = Blob{} }
func (m *Blob) String() string { return proto.CompactTextString(m) }
func (*Blob) ProtoMessage()    {}
func (*Blob) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{4}
}

func (m *Blob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Blob.Unmarshal(m, b)
}
func (m *Blob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Blob.Marshal(b, m, deterministic)
}
func (m *Blob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Blob.Merge(m, src)
}
func (m *Blob) XXX_Size() int {
	return xxx_messageInfo_Blob.Size(m)
}
func (m *Blob) XXX_DiscardUnknown() {
	xxx_messageInfo_Blob.DiscardUnknown(m)
}

var xxx_messageInfo_Blob proto.InternalMessageInfo

type isBlob_Content interface {
	isBlob_Content()
}

type Blob_Dataset struct {
	Dataset *DatasetBlob `protobuf:"bytes,1,opt,name=dataset,proto3,oneof"`
}

func (*Blob_Dataset) isBlob_Content() {}

func (m *Blob) GetContent() isBlob_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Blob) GetDataset() *DatasetBlob {
	if x, ok := m.GetContent().(*Blob_Dataset); ok {
		return x.Dataset
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Blob) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Blob_Dataset)(nil),
	}
}

type BlobExpanded struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Blob                 *Blob    `protobuf:"bytes,2,opt,name=blob,proto3" json:"blob,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlobExpanded) Reset()         { *m = BlobExpanded{} }
func (m *BlobExpanded) String() string { return proto.CompactTextString(m) }
func (*BlobExpanded) ProtoMessage()    {}
func (*BlobExpanded) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{5}
}

func (m *BlobExpanded) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlobExpanded.Unmarshal(m, b)
}
func (m *BlobExpanded) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlobExpanded.Marshal(b, m, deterministic)
}
func (m *BlobExpanded) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlobExpanded.Merge(m, src)
}
func (m *BlobExpanded) XXX_Size() int {
	return xxx_messageInfo_BlobExpanded.Size(m)
}
func (m *BlobExpanded) XXX_DiscardUnknown() {
	xxx_messageInfo_BlobExpanded.DiscardUnknown(m)
}

var xxx_messageInfo_BlobExpanded proto.InternalMessageInfo

func (m *BlobExpanded) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *BlobExpanded) GetBlob() *Blob {
	if m != nil {
		return m.Blob
	}
	return nil
}

type BlobDiff struct {
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	// Types that are valid to be assigned to Content:
	//	*BlobDiff_Dataset
	Content              isBlobDiff_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BlobDiff) Reset()         { *m = BlobDiff{} }
func (m *BlobDiff) String() string { return proto.CompactTextString(m) }
func (*BlobDiff) ProtoMessage()    {}
func (*BlobDiff) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{6}
}

func (m *BlobDiff) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlobDiff.Unmarshal(m, b)
}
func (m *BlobDiff) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlobDiff.Marshal(b, m, deterministic)
}
func (m *BlobDiff) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlobDiff.Merge(m, src)
}
func (m *BlobDiff) XXX_Size() int {
	return xxx_messageInfo_BlobDiff.Size(m)
}
func (m *BlobDiff) XXX_DiscardUnknown() {
	xxx_messageInfo_BlobDiff.DiscardUnknown(m)
}

var xxx_messageInfo_BlobDiff proto.InternalMessageInfo

func (m *BlobDiff) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type isBlobDiff_Content interface {
	isBlobDiff_Content()
}

type BlobDiff_Dataset struct {
	Dataset *DatasetDiff `protobuf:"bytes,2,opt,name=dataset,proto3,oneof"`
}

func (*BlobDiff_Dataset) isBlobDiff_Content() {}

func (m *BlobDiff) GetContent() isBlobDiff_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *BlobDiff) GetDataset() *DatasetDiff {
	if x, ok := m.GetContent().(*BlobDiff_Dataset); ok {
		return x.Dataset
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*BlobDiff) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*BlobDiff_Dataset)(nil),
	}
}

type Entity struct {
	// ID of the entity. Computed as the hash of all fields, excluding this field.
	// NOTE: be careful: maps must be hashed in the same order every time
	Sha256       string `protobuf:"bytes,1,opt,name=sha256,proto3" json:"sha256,omitempty"`
	RepositoryId string `protobuf:"bytes,2,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	// Types that are valid to be assigned to Content:
	//	*Entity_Commit
	//	*Entity_Tree
	//	*Entity_Blob
	Content              isEntity_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Entity) Reset()         { *m = Entity{} }
func (m *Entity) String() string { return proto.CompactTextString(m) }
func (*Entity) ProtoMessage()    {}
func (*Entity) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{7}
}

func (m *Entity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entity.Unmarshal(m, b)
}
func (m *Entity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entity.Marshal(b, m, deterministic)
}
func (m *Entity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entity.Merge(m, src)
}
func (m *Entity) XXX_Size() int {
	return xxx_messageInfo_Entity.Size(m)
}
func (m *Entity) XXX_DiscardUnknown() {
	xxx_messageInfo_Entity.DiscardUnknown(m)
}

var xxx_messageInfo_Entity proto.InternalMessageInfo

func (m *Entity) GetSha256() string {
	if m != nil {
		return m.Sha256
	}
	return ""
}

func (m *Entity) GetRepositoryId() string {
	if m != nil {
		return m.RepositoryId
	}
	return ""
}

type isEntity_Content interface {
	isEntity_Content()
}

type Entity_Commit struct {
	Commit *Commit `protobuf:"bytes,3,opt,name=commit,proto3,oneof"`
}

type Entity_Tree struct {
	Tree *Tree `protobuf:"bytes,4,opt,name=tree,proto3,oneof"`
}

type Entity_Blob struct {
	Blob *Blob `protobuf:"bytes,5,opt,name=blob,proto3,oneof"`
}

func (*Entity_Commit) isEntity_Content() {}

func (*Entity_Tree) isEntity_Content() {}

func (*Entity_Blob) isEntity_Content() {}

func (m *Entity) GetContent() isEntity_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Entity) GetCommit() *Commit {
	if x, ok := m.GetContent().(*Entity_Commit); ok {
		return x.Commit
	}
	return nil
}

func (m *Entity) GetTree() *Tree {
	if x, ok := m.GetContent().(*Entity_Tree); ok {
		return x.Tree
	}
	return nil
}

func (m *Entity) GetBlob() *Blob {
	if x, ok := m.GetContent().(*Entity_Blob); ok {
		return x.Blob
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Entity) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Entity_Commit)(nil),
		(*Entity_Tree)(nil),
		(*Entity_Blob)(nil),
	}
}

type Repository struct {
	Id                   string                                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string                                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DateCreated          uint64                                  `protobuf:"varint,3,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`
	DateUpdated          uint64                                  `protobuf:"varint,4,opt,name=date_updated,json=dateUpdated,proto3" json:"date_updated,omitempty"`
	WorkspaceId          string                                  `protobuf:"bytes,5,opt,name=workspace_id,json=workspaceId,proto3" json:"workspace_id,omitempty"`
	WorkspaceType        modeldb.WorkspaceTypeEnum_WorkspaceType `protobuf:"varint,6,opt,name=workspace_type,json=workspaceType,proto3,enum=ai.verta.modeldb.WorkspaceTypeEnum_WorkspaceType" json:"workspace_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *Repository) Reset()         { *m = Repository{} }
func (m *Repository) String() string { return proto.CompactTextString(m) }
func (*Repository) ProtoMessage()    {}
func (*Repository) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{8}
}

func (m *Repository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Repository.Unmarshal(m, b)
}
func (m *Repository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Repository.Marshal(b, m, deterministic)
}
func (m *Repository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Repository.Merge(m, src)
}
func (m *Repository) XXX_Size() int {
	return xxx_messageInfo_Repository.Size(m)
}
func (m *Repository) XXX_DiscardUnknown() {
	xxx_messageInfo_Repository.DiscardUnknown(m)
}

var xxx_messageInfo_Repository proto.InternalMessageInfo

func (m *Repository) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Repository) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Repository) GetDateCreated() uint64 {
	if m != nil {
		return m.DateCreated
	}
	return 0
}

func (m *Repository) GetDateUpdated() uint64 {
	if m != nil {
		return m.DateUpdated
	}
	return 0
}

func (m *Repository) GetWorkspaceId() string {
	if m != nil {
		return m.WorkspaceId
	}
	return ""
}

func (m *Repository) GetWorkspaceType() modeldb.WorkspaceTypeEnum_WorkspaceType {
	if m != nil {
		return m.WorkspaceType
	}
	return modeldb.WorkspaceTypeEnum_UNKNOWN
}

type GetRepository struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	WorkspaceName        string   `protobuf:"bytes,3,opt,name=workspace_name,json=workspaceName,proto3" json:"workspace_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRepository) Reset()         { *m = GetRepository{} }
func (m *GetRepository) String() string { return proto.CompactTextString(m) }
func (*GetRepository) ProtoMessage()    {}
func (*GetRepository) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{9}
}

func (m *GetRepository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepository.Unmarshal(m, b)
}
func (m *GetRepository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepository.Marshal(b, m, deterministic)
}
func (m *GetRepository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepository.Merge(m, src)
}
func (m *GetRepository) XXX_Size() int {
	return xxx_messageInfo_GetRepository.Size(m)
}
func (m *GetRepository) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepository.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepository proto.InternalMessageInfo

func (m *GetRepository) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetRepository) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetRepository) GetWorkspaceName() string {
	if m != nil {
		return m.WorkspaceName
	}
	return ""
}

type GetRepository_Response struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetRepository_Response) Reset()         { *m = GetRepository_Response{} }
func (m *GetRepository_Response) String() string { return proto.CompactTextString(m) }
func (*GetRepository_Response) ProtoMessage()    {}
func (*GetRepository_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{9, 0}
}

func (m *GetRepository_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepository_Response.Unmarshal(m, b)
}
func (m *GetRepository_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepository_Response.Marshal(b, m, deterministic)
}
func (m *GetRepository_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepository_Response.Merge(m, src)
}
func (m *GetRepository_Response) XXX_Size() int {
	return xxx_messageInfo_GetRepository_Response.Size(m)
}
func (m *GetRepository_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepository_Response.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepository_Response proto.InternalMessageInfo

func (m *GetRepository_Response) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type SetRepository struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	WorkspaceName        string      `protobuf:"bytes,2,opt,name=workspace_name,json=workspaceName,proto3" json:"workspace_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SetRepository) Reset()         { *m = SetRepository{} }
func (m *SetRepository) String() string { return proto.CompactTextString(m) }
func (*SetRepository) ProtoMessage()    {}
func (*SetRepository) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{10}
}

func (m *SetRepository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRepository.Unmarshal(m, b)
}
func (m *SetRepository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRepository.Marshal(b, m, deterministic)
}
func (m *SetRepository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRepository.Merge(m, src)
}
func (m *SetRepository) XXX_Size() int {
	return xxx_messageInfo_SetRepository.Size(m)
}
func (m *SetRepository) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRepository.DiscardUnknown(m)
}

var xxx_messageInfo_SetRepository proto.InternalMessageInfo

func (m *SetRepository) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

func (m *SetRepository) GetWorkspaceName() string {
	if m != nil {
		return m.WorkspaceName
	}
	return ""
}

type SetRepository_Response struct {
	Repository           *Repository `protobuf:"bytes,1,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SetRepository_Response) Reset()         { *m = SetRepository_Response{} }
func (m *SetRepository_Response) String() string { return proto.CompactTextString(m) }
func (*SetRepository_Response) ProtoMessage()    {}
func (*SetRepository_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{10, 0}
}

func (m *SetRepository_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRepository_Response.Unmarshal(m, b)
}
func (m *SetRepository_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRepository_Response.Marshal(b, m, deterministic)
}
func (m *SetRepository_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRepository_Response.Merge(m, src)
}
func (m *SetRepository_Response) XXX_Size() int {
	return xxx_messageInfo_SetRepository_Response.Size(m)
}
func (m *SetRepository_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRepository_Response.DiscardUnknown(m)
}

var xxx_messageInfo_SetRepository_Response proto.InternalMessageInfo

func (m *SetRepository_Response) GetRepository() *Repository {
	if m != nil {
		return m.Repository
	}
	return nil
}

type DeleteRepository struct {
	RepositoryId         string   `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRepository) Reset()         { *m = DeleteRepository{} }
func (m *DeleteRepository) String() string { return proto.CompactTextString(m) }
func (*DeleteRepository) ProtoMessage()    {}
func (*DeleteRepository) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{11}
}

func (m *DeleteRepository) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRepository.Unmarshal(m, b)
}
func (m *DeleteRepository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRepository.Marshal(b, m, deterministic)
}
func (m *DeleteRepository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRepository.Merge(m, src)
}
func (m *DeleteRepository) XXX_Size() int {
	return xxx_messageInfo_DeleteRepository.Size(m)
}
func (m *DeleteRepository) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRepository.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRepository proto.InternalMessageInfo

func (m *DeleteRepository) GetRepositoryId() string {
	if m != nil {
		return m.RepositoryId
	}
	return ""
}

type DeleteRepository_Response struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRepository_Response) Reset()         { *m = DeleteRepository_Response{} }
func (m *DeleteRepository_Response) String() string { return proto.CompactTextString(m) }
func (*DeleteRepository_Response) ProtoMessage()    {}
func (*DeleteRepository_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{11, 0}
}

func (m *DeleteRepository_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRepository_Response.Unmarshal(m, b)
}
func (m *DeleteRepository_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRepository_Response.Marshal(b, m, deterministic)
}
func (m *DeleteRepository_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRepository_Response.Merge(m, src)
}
func (m *DeleteRepository_Response) XXX_Size() int {
	return xxx_messageInfo_DeleteRepository_Response.Size(m)
}
func (m *DeleteRepository_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRepository_Response.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRepository_Response proto.InternalMessageInfo

func (m *DeleteRepository_Response) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type BatchGetEntity struct {
	Shas                 []string `protobuf:"bytes,1,rep,name=shas,proto3" json:"shas,omitempty"`
	RepositoryId         string   `protobuf:"bytes,2,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchGetEntity) Reset()         { *m = BatchGetEntity{} }
func (m *BatchGetEntity) String() string { return proto.CompactTextString(m) }
func (*BatchGetEntity) ProtoMessage()    {}
func (*BatchGetEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{12}
}

func (m *BatchGetEntity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetEntity.Unmarshal(m, b)
}
func (m *BatchGetEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetEntity.Marshal(b, m, deterministic)
}
func (m *BatchGetEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetEntity.Merge(m, src)
}
func (m *BatchGetEntity) XXX_Size() int {
	return xxx_messageInfo_BatchGetEntity.Size(m)
}
func (m *BatchGetEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetEntity.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetEntity proto.InternalMessageInfo

func (m *BatchGetEntity) GetShas() []string {
	if m != nil {
		return m.Shas
	}
	return nil
}

func (m *BatchGetEntity) GetRepositoryId() string {
	if m != nil {
		return m.RepositoryId
	}
	return ""
}

type BatchGetEntity_Response struct {
	Entities             []*Entity `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BatchGetEntity_Response) Reset()         { *m = BatchGetEntity_Response{} }
func (m *BatchGetEntity_Response) String() string { return proto.CompactTextString(m) }
func (*BatchGetEntity_Response) ProtoMessage()    {}
func (*BatchGetEntity_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{12, 0}
}

func (m *BatchGetEntity_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetEntity_Response.Unmarshal(m, b)
}
func (m *BatchGetEntity_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetEntity_Response.Marshal(b, m, deterministic)
}
func (m *BatchGetEntity_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetEntity_Response.Merge(m, src)
}
func (m *BatchGetEntity_Response) XXX_Size() int {
	return xxx_messageInfo_BatchGetEntity_Response.Size(m)
}
func (m *BatchGetEntity_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetEntity_Response.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetEntity_Response proto.InternalMessageInfo

func (m *BatchGetEntity_Response) GetEntities() []*Entity {
	if m != nil {
		return m.Entities
	}
	return nil
}

type AddEntity struct {
	// If SHA is not empty, verify before adding the corresponding entry to avoid corruption
	// If empty, compute it
	Entity               *Entity  `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddEntity) Reset()         { *m = AddEntity{} }
func (m *AddEntity) String() string { return proto.CompactTextString(m) }
func (*AddEntity) ProtoMessage()    {}
func (*AddEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{13}
}

func (m *AddEntity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddEntity.Unmarshal(m, b)
}
func (m *AddEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddEntity.Marshal(b, m, deterministic)
}
func (m *AddEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddEntity.Merge(m, src)
}
func (m *AddEntity) XXX_Size() int {
	return xxx_messageInfo_AddEntity.Size(m)
}
func (m *AddEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_AddEntity.DiscardUnknown(m)
}

var xxx_messageInfo_AddEntity proto.InternalMessageInfo

func (m *AddEntity) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

type AddEntity_Response struct {
	Entity               *Entity  `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddEntity_Response) Reset()         { *m = AddEntity_Response{} }
func (m *AddEntity_Response) String() string { return proto.CompactTextString(m) }
func (*AddEntity_Response) ProtoMessage()    {}
func (*AddEntity_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{13, 0}
}

func (m *AddEntity_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddEntity_Response.Unmarshal(m, b)
}
func (m *AddEntity_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddEntity_Response.Marshal(b, m, deterministic)
}
func (m *AddEntity_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddEntity_Response.Merge(m, src)
}
func (m *AddEntity_Response) XXX_Size() int {
	return xxx_messageInfo_AddEntity_Response.Size(m)
}
func (m *AddEntity_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_AddEntity_Response.DiscardUnknown(m)
}

var xxx_messageInfo_AddEntity_Response proto.InternalMessageInfo

func (m *AddEntity_Response) GetEntity() *Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

type DeleteEntity struct {
	Sha256               string   `protobuf:"bytes,1,opt,name=sha256,proto3" json:"sha256,omitempty"`
	RepositoryId         string   `protobuf:"bytes,2,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteEntity) Reset()         { *m = DeleteEntity{} }
func (m *DeleteEntity) String() string { return proto.CompactTextString(m) }
func (*DeleteEntity) ProtoMessage()    {}
func (*DeleteEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{14}
}

func (m *DeleteEntity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteEntity.Unmarshal(m, b)
}
func (m *DeleteEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteEntity.Marshal(b, m, deterministic)
}
func (m *DeleteEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteEntity.Merge(m, src)
}
func (m *DeleteEntity) XXX_Size() int {
	return xxx_messageInfo_DeleteEntity.Size(m)
}
func (m *DeleteEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteEntity.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteEntity proto.InternalMessageInfo

func (m *DeleteEntity) GetSha256() string {
	if m != nil {
		return m.Sha256
	}
	return ""
}

func (m *DeleteEntity) GetRepositoryId() string {
	if m != nil {
		return m.RepositoryId
	}
	return ""
}

type DeleteEntity_Response struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteEntity_Response) Reset()         { *m = DeleteEntity_Response{} }
func (m *DeleteEntity_Response) String() string { return proto.CompactTextString(m) }
func (*DeleteEntity_Response) ProtoMessage()    {}
func (*DeleteEntity_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{14, 0}
}

func (m *DeleteEntity_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteEntity_Response.Unmarshal(m, b)
}
func (m *DeleteEntity_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteEntity_Response.Marshal(b, m, deterministic)
}
func (m *DeleteEntity_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteEntity_Response.Merge(m, src)
}
func (m *DeleteEntity_Response) XXX_Size() int {
	return xxx_messageInfo_DeleteEntity_Response.Size(m)
}
func (m *DeleteEntity_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteEntity_Response.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteEntity_Response proto.InternalMessageInfo

func (m *DeleteEntity_Response) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type CommitRepositoryBlobs struct {
	RepositoryId         string          `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	ParentIds            []string        `protobuf:"bytes,2,rep,name=parent_ids,json=parentIds,proto3" json:"parent_ids,omitempty"`
	Content              *CommitContent  `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Blobs                []*BlobExpanded `protobuf:"bytes,4,rep,name=blobs,proto3" json:"blobs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CommitRepositoryBlobs) Reset()         { *m = CommitRepositoryBlobs{} }
func (m *CommitRepositoryBlobs) String() string { return proto.CompactTextString(m) }
func (*CommitRepositoryBlobs) ProtoMessage()    {}
func (*CommitRepositoryBlobs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{15}
}

func (m *CommitRepositoryBlobs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitRepositoryBlobs.Unmarshal(m, b)
}
func (m *CommitRepositoryBlobs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitRepositoryBlobs.Marshal(b, m, deterministic)
}
func (m *CommitRepositoryBlobs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitRepositoryBlobs.Merge(m, src)
}
func (m *CommitRepositoryBlobs) XXX_Size() int {
	return xxx_messageInfo_CommitRepositoryBlobs.Size(m)
}
func (m *CommitRepositoryBlobs) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitRepositoryBlobs.DiscardUnknown(m)
}

var xxx_messageInfo_CommitRepositoryBlobs proto.InternalMessageInfo

func (m *CommitRepositoryBlobs) GetRepositoryId() string {
	if m != nil {
		return m.RepositoryId
	}
	return ""
}

func (m *CommitRepositoryBlobs) GetParentIds() []string {
	if m != nil {
		return m.ParentIds
	}
	return nil
}

func (m *CommitRepositoryBlobs) GetContent() *CommitContent {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *CommitRepositoryBlobs) GetBlobs() []*BlobExpanded {
	if m != nil {
		return m.Blobs
	}
	return nil
}

type CommitRepositoryBlobs_Response struct {
	Commit               *Commit  `protobuf:"bytes,1,opt,name=commit,proto3" json:"commit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitRepositoryBlobs_Response) Reset()         { *m = CommitRepositoryBlobs_Response{} }
func (m *CommitRepositoryBlobs_Response) String() string { return proto.CompactTextString(m) }
func (*CommitRepositoryBlobs_Response) ProtoMessage()    {}
func (*CommitRepositoryBlobs_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{15, 0}
}

func (m *CommitRepositoryBlobs_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitRepositoryBlobs_Response.Unmarshal(m, b)
}
func (m *CommitRepositoryBlobs_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitRepositoryBlobs_Response.Marshal(b, m, deterministic)
}
func (m *CommitRepositoryBlobs_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitRepositoryBlobs_Response.Merge(m, src)
}
func (m *CommitRepositoryBlobs_Response) XXX_Size() int {
	return xxx_messageInfo_CommitRepositoryBlobs_Response.Size(m)
}
func (m *CommitRepositoryBlobs_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitRepositoryBlobs_Response.DiscardUnknown(m)
}

var xxx_messageInfo_CommitRepositoryBlobs_Response proto.InternalMessageInfo

func (m *CommitRepositoryBlobs_Response) GetCommit() *Commit {
	if m != nil {
		return m.Commit
	}
	return nil
}

type GetRepositoryBlobs struct {
	RepositoryId         string   `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	CommitId             string   `protobuf:"bytes,2,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
	GlobPathPrefix       string   `protobuf:"bytes,3,opt,name=glob_path_prefix,json=globPathPrefix,proto3" json:"glob_path_prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRepositoryBlobs) Reset()         { *m = GetRepositoryBlobs{} }
func (m *GetRepositoryBlobs) String() string { return proto.CompactTextString(m) }
func (*GetRepositoryBlobs) ProtoMessage()    {}
func (*GetRepositoryBlobs) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{16}
}

func (m *GetRepositoryBlobs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepositoryBlobs.Unmarshal(m, b)
}
func (m *GetRepositoryBlobs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepositoryBlobs.Marshal(b, m, deterministic)
}
func (m *GetRepositoryBlobs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepositoryBlobs.Merge(m, src)
}
func (m *GetRepositoryBlobs) XXX_Size() int {
	return xxx_messageInfo_GetRepositoryBlobs.Size(m)
}
func (m *GetRepositoryBlobs) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepositoryBlobs.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepositoryBlobs proto.InternalMessageInfo

func (m *GetRepositoryBlobs) GetRepositoryId() string {
	if m != nil {
		return m.RepositoryId
	}
	return ""
}

func (m *GetRepositoryBlobs) GetCommitId() string {
	if m != nil {
		return m.CommitId
	}
	return ""
}

func (m *GetRepositoryBlobs) GetGlobPathPrefix() string {
	if m != nil {
		return m.GlobPathPrefix
	}
	return ""
}

type GetRepositoryBlobs_Response struct {
	Blobs                []*BlobExpanded `protobuf:"bytes,1,rep,name=blobs,proto3" json:"blobs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetRepositoryBlobs_Response) Reset()         { *m = GetRepositoryBlobs_Response{} }
func (m *GetRepositoryBlobs_Response) String() string { return proto.CompactTextString(m) }
func (*GetRepositoryBlobs_Response) ProtoMessage()    {}
func (*GetRepositoryBlobs_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{16, 0}
}

func (m *GetRepositoryBlobs_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepositoryBlobs_Response.Unmarshal(m, b)
}
func (m *GetRepositoryBlobs_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepositoryBlobs_Response.Marshal(b, m, deterministic)
}
func (m *GetRepositoryBlobs_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepositoryBlobs_Response.Merge(m, src)
}
func (m *GetRepositoryBlobs_Response) XXX_Size() int {
	return xxx_messageInfo_GetRepositoryBlobs_Response.Size(m)
}
func (m *GetRepositoryBlobs_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepositoryBlobs_Response.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepositoryBlobs_Response proto.InternalMessageInfo

func (m *GetRepositoryBlobs_Response) GetBlobs() []*BlobExpanded {
	if m != nil {
		return m.Blobs
	}
	return nil
}

type GetRepositoryDiff struct {
	RepositoryId         string   `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	CommitA              string   `protobuf:"bytes,2,opt,name=commit_a,json=commitA,proto3" json:"commit_a,omitempty"`
	CommitB              string   `protobuf:"bytes,3,opt,name=commit_b,json=commitB,proto3" json:"commit_b,omitempty"`
	GlobPathPrefix       string   `protobuf:"bytes,4,opt,name=glob_path_prefix,json=globPathPrefix,proto3" json:"glob_path_prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRepositoryDiff) Reset()         { *m = GetRepositoryDiff{} }
func (m *GetRepositoryDiff) String() string { return proto.CompactTextString(m) }
func (*GetRepositoryDiff) ProtoMessage()    {}
func (*GetRepositoryDiff) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{17}
}

func (m *GetRepositoryDiff) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepositoryDiff.Unmarshal(m, b)
}
func (m *GetRepositoryDiff) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepositoryDiff.Marshal(b, m, deterministic)
}
func (m *GetRepositoryDiff) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepositoryDiff.Merge(m, src)
}
func (m *GetRepositoryDiff) XXX_Size() int {
	return xxx_messageInfo_GetRepositoryDiff.Size(m)
}
func (m *GetRepositoryDiff) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepositoryDiff.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepositoryDiff proto.InternalMessageInfo

func (m *GetRepositoryDiff) GetRepositoryId() string {
	if m != nil {
		return m.RepositoryId
	}
	return ""
}

func (m *GetRepositoryDiff) GetCommitA() string {
	if m != nil {
		return m.CommitA
	}
	return ""
}

func (m *GetRepositoryDiff) GetCommitB() string {
	if m != nil {
		return m.CommitB
	}
	return ""
}

func (m *GetRepositoryDiff) GetGlobPathPrefix() string {
	if m != nil {
		return m.GlobPathPrefix
	}
	return ""
}

type GetRepositoryDiff_Response struct {
	Diffs                []*BlobDiff `protobuf:"bytes,1,rep,name=diffs,proto3" json:"diffs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetRepositoryDiff_Response) Reset()         { *m = GetRepositoryDiff_Response{} }
func (m *GetRepositoryDiff_Response) String() string { return proto.CompactTextString(m) }
func (*GetRepositoryDiff_Response) ProtoMessage()    {}
func (*GetRepositoryDiff_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{17, 0}
}

func (m *GetRepositoryDiff_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepositoryDiff_Response.Unmarshal(m, b)
}
func (m *GetRepositoryDiff_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepositoryDiff_Response.Marshal(b, m, deterministic)
}
func (m *GetRepositoryDiff_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepositoryDiff_Response.Merge(m, src)
}
func (m *GetRepositoryDiff_Response) XXX_Size() int {
	return xxx_messageInfo_GetRepositoryDiff_Response.Size(m)
}
func (m *GetRepositoryDiff_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepositoryDiff_Response.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepositoryDiff_Response proto.InternalMessageInfo

func (m *GetRepositoryDiff_Response) GetDiffs() []*BlobDiff {
	if m != nil {
		return m.Diffs
	}
	return nil
}

type GetRepositoryLog struct {
	RepositoryId   string `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	CommitBase     string `protobuf:"bytes,2,opt,name=commit_base,json=commitBase,proto3" json:"commit_base,omitempty"`
	CommitHead     string `protobuf:"bytes,3,opt,name=commit_head,json=commitHead,proto3" json:"commit_head,omitempty"`
	GlobPathPrefix string `protobuf:"bytes,6,opt,name=glob_path_prefix,json=globPathPrefix,proto3" json:"glob_path_prefix,omitempty"`
	//For pagination
	PageNumber           int32    `protobuf:"varint,4,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageLimit            int32    `protobuf:"varint,5,opt,name=page_limit,json=pageLimit,proto3" json:"page_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRepositoryLog) Reset()         { *m = GetRepositoryLog{} }
func (m *GetRepositoryLog) String() string { return proto.CompactTextString(m) }
func (*GetRepositoryLog) ProtoMessage()    {}
func (*GetRepositoryLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{18}
}

func (m *GetRepositoryLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepositoryLog.Unmarshal(m, b)
}
func (m *GetRepositoryLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepositoryLog.Marshal(b, m, deterministic)
}
func (m *GetRepositoryLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepositoryLog.Merge(m, src)
}
func (m *GetRepositoryLog) XXX_Size() int {
	return xxx_messageInfo_GetRepositoryLog.Size(m)
}
func (m *GetRepositoryLog) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepositoryLog.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepositoryLog proto.InternalMessageInfo

func (m *GetRepositoryLog) GetRepositoryId() string {
	if m != nil {
		return m.RepositoryId
	}
	return ""
}

func (m *GetRepositoryLog) GetCommitBase() string {
	if m != nil {
		return m.CommitBase
	}
	return ""
}

func (m *GetRepositoryLog) GetCommitHead() string {
	if m != nil {
		return m.CommitHead
	}
	return ""
}

func (m *GetRepositoryLog) GetGlobPathPrefix() string {
	if m != nil {
		return m.GlobPathPrefix
	}
	return ""
}

func (m *GetRepositoryLog) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *GetRepositoryLog) GetPageLimit() int32 {
	if m != nil {
		return m.PageLimit
	}
	return 0
}

type GetRepositoryLog_Response struct {
	Commits              []*Commit `protobuf:"bytes,1,rep,name=commits,proto3" json:"commits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetRepositoryLog_Response) Reset()         { *m = GetRepositoryLog_Response{} }
func (m *GetRepositoryLog_Response) String() string { return proto.CompactTextString(m) }
func (*GetRepositoryLog_Response) ProtoMessage()    {}
func (*GetRepositoryLog_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{18, 0}
}

func (m *GetRepositoryLog_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRepositoryLog_Response.Unmarshal(m, b)
}
func (m *GetRepositoryLog_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRepositoryLog_Response.Marshal(b, m, deterministic)
}
func (m *GetRepositoryLog_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRepositoryLog_Response.Merge(m, src)
}
func (m *GetRepositoryLog_Response) XXX_Size() int {
	return xxx_messageInfo_GetRepositoryLog_Response.Size(m)
}
func (m *GetRepositoryLog_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRepositoryLog_Response.DiscardUnknown(m)
}

var xxx_messageInfo_GetRepositoryLog_Response proto.InternalMessageInfo

func (m *GetRepositoryLog_Response) GetCommits() []*Commit {
	if m != nil {
		return m.Commits
	}
	return nil
}

// Tags, like in git, are unique
type SetTag struct {
	RepositoryId         string   `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Tag                  string   `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	CommitId             string   `protobuf:"bytes,3,opt,name=commit_id,json=commitId,proto3" json:"commit_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetTag) Reset()         { *m = SetTag{} }
func (m *SetTag) String() string { return proto.CompactTextString(m) }
func (*SetTag) ProtoMessage()    {}
func (*SetTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{19}
}

func (m *SetTag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetTag.Unmarshal(m, b)
}
func (m *SetTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetTag.Marshal(b, m, deterministic)
}
func (m *SetTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetTag.Merge(m, src)
}
func (m *SetTag) XXX_Size() int {
	return xxx_messageInfo_SetTag.Size(m)
}
func (m *SetTag) XXX_DiscardUnknown() {
	xxx_messageInfo_SetTag.DiscardUnknown(m)
}

var xxx_messageInfo_SetTag proto.InternalMessageInfo

func (m *SetTag) GetRepositoryId() string {
	if m != nil {
		return m.RepositoryId
	}
	return ""
}

func (m *SetTag) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *SetTag) GetCommitId() string {
	if m != nil {
		return m.CommitId
	}
	return ""
}

type SetTag_Response struct {
	Status               bool     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetTag_Response) Reset()         { *m = SetTag_Response{} }
func (m *SetTag_Response) String() string { return proto.CompactTextString(m) }
func (*SetTag_Response) ProtoMessage()    {}
func (*SetTag_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{19, 0}
}

func (m *SetTag_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetTag_Response.Unmarshal(m, b)
}
func (m *SetTag_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetTag_Response.Marshal(b, m, deterministic)
}
func (m *SetTag_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetTag_Response.Merge(m, src)
}
func (m *SetTag_Response) XXX_Size() int {
	return xxx_messageInfo_SetTag_Response.Size(m)
}
func (m *SetTag_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_SetTag_Response.DiscardUnknown(m)
}

var xxx_messageInfo_SetTag_Response proto.InternalMessageInfo

func (m *SetTag_Response) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

type GetTag struct {
	RepositoryId         string   `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Tag                  string   `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTag) Reset()         { *m = GetTag{} }
func (m *GetTag) String() string { return proto.CompactTextString(m) }
func (*GetTag) ProtoMessage()    {}
func (*GetTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{20}
}

func (m *GetTag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTag.Unmarshal(m, b)
}
func (m *GetTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTag.Marshal(b, m, deterministic)
}
func (m *GetTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTag.Merge(m, src)
}
func (m *GetTag) XXX_Size() int {
	return xxx_messageInfo_GetTag.Size(m)
}
func (m *GetTag) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTag.DiscardUnknown(m)
}

var xxx_messageInfo_GetTag proto.InternalMessageInfo

func (m *GetTag) GetRepositoryId() string {
	if m != nil {
		return m.RepositoryId
	}
	return ""
}

func (m *GetTag) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

type GetTag_Response struct {
	Commit               *Commit  `protobuf:"bytes,1,opt,name=commit,proto3" json:"commit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTag_Response) Reset()         { *m = GetTag_Response{} }
func (m *GetTag_Response) String() string { return proto.CompactTextString(m) }
func (*GetTag_Response) ProtoMessage()    {}
func (*GetTag_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cadc242402e79bc, []int{20, 0}
}

func (m *GetTag_Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTag_Response.Unmarshal(m, b)
}
func (m *GetTag_Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTag_Response.Marshal(b, m, deterministic)
}
func (m *GetTag_Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTag_Response.Merge(m, src)
}
func (m *GetTag_Response) XXX_Size() int {
	return xxx_messageInfo_GetTag_Response.Size(m)
}
func (m *GetTag_Response) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTag_Response.DiscardUnknown(m)
}

var xxx_messageInfo_GetTag_Response proto.InternalMessageInfo

func (m *GetTag_Response) GetCommit() *Commit {
	if m != nil {
		return m.Commit
	}
	return nil
}

func init() {
	proto.RegisterType((*Commit)(nil), "ai.verta.modeldb.versioning.Commit")
	proto.RegisterType((*CommitContent)(nil), "ai.verta.modeldb.versioning.CommitContent")
	proto.RegisterType((*TreeElement)(nil), "ai.verta.modeldb.versioning.TreeElement")
	proto.RegisterType((*Tree)(nil), "ai.verta.modeldb.versioning.Tree")
	proto.RegisterType((*Blob)(nil), "ai.verta.modeldb.versioning.Blob")
	proto.RegisterType((*BlobExpanded)(nil), "ai.verta.modeldb.versioning.BlobExpanded")
	proto.RegisterType((*BlobDiff)(nil), "ai.verta.modeldb.versioning.BlobDiff")
	proto.RegisterType((*Entity)(nil), "ai.verta.modeldb.versioning.Entity")
	proto.RegisterType((*Repository)(nil), "ai.verta.modeldb.versioning.Repository")
	proto.RegisterType((*GetRepository)(nil), "ai.verta.modeldb.versioning.GetRepository")
	proto.RegisterType((*GetRepository_Response)(nil), "ai.verta.modeldb.versioning.GetRepository.Response")
	proto.RegisterType((*SetRepository)(nil), "ai.verta.modeldb.versioning.SetRepository")
	proto.RegisterType((*SetRepository_Response)(nil), "ai.verta.modeldb.versioning.SetRepository.Response")
	proto.RegisterType((*DeleteRepository)(nil), "ai.verta.modeldb.versioning.DeleteRepository")
	proto.RegisterType((*DeleteRepository_Response)(nil), "ai.verta.modeldb.versioning.DeleteRepository.Response")
	proto.RegisterType((*BatchGetEntity)(nil), "ai.verta.modeldb.versioning.BatchGetEntity")
	proto.RegisterType((*BatchGetEntity_Response)(nil), "ai.verta.modeldb.versioning.BatchGetEntity.Response")
	proto.RegisterType((*AddEntity)(nil), "ai.verta.modeldb.versioning.AddEntity")
	proto.RegisterType((*AddEntity_Response)(nil), "ai.verta.modeldb.versioning.AddEntity.Response")
	proto.RegisterType((*DeleteEntity)(nil), "ai.verta.modeldb.versioning.DeleteEntity")
	proto.RegisterType((*DeleteEntity_Response)(nil), "ai.verta.modeldb.versioning.DeleteEntity.Response")
	proto.RegisterType((*CommitRepositoryBlobs)(nil), "ai.verta.modeldb.versioning.CommitRepositoryBlobs")
	proto.RegisterType((*CommitRepositoryBlobs_Response)(nil), "ai.verta.modeldb.versioning.CommitRepositoryBlobs.Response")
	proto.RegisterType((*GetRepositoryBlobs)(nil), "ai.verta.modeldb.versioning.GetRepositoryBlobs")
	proto.RegisterType((*GetRepositoryBlobs_Response)(nil), "ai.verta.modeldb.versioning.GetRepositoryBlobs.Response")
	proto.RegisterType((*GetRepositoryDiff)(nil), "ai.verta.modeldb.versioning.GetRepositoryDiff")
	proto.RegisterType((*GetRepositoryDiff_Response)(nil), "ai.verta.modeldb.versioning.GetRepositoryDiff.Response")
	proto.RegisterType((*GetRepositoryLog)(nil), "ai.verta.modeldb.versioning.GetRepositoryLog")
	proto.RegisterType((*GetRepositoryLog_Response)(nil), "ai.verta.modeldb.versioning.GetRepositoryLog.Response")
	proto.RegisterType((*SetTag)(nil), "ai.verta.modeldb.versioning.SetTag")
	proto.RegisterType((*SetTag_Response)(nil), "ai.verta.modeldb.versioning.SetTag.Response")
	proto.RegisterType((*GetTag)(nil), "ai.verta.modeldb.versioning.GetTag")
	proto.RegisterType((*GetTag_Response)(nil), "ai.verta.modeldb.versioning.GetTag.Response")
}

func init() {
	proto.RegisterFile("protos/public/modeldb/versioning/VersioningService.proto", fileDescriptor_8cadc242402e79bc)
}

var fileDescriptor_8cadc242402e79bc = []byte{
	// 1474 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0xdb, 0x6e, 0x1b, 0xc5,
	0x1b, 0xef, 0x38, 0x8e, 0x13, 0x7f, 0x8e, 0xad, 0x74, 0xa4, 0xfc, 0xeb, 0xff, 0xb6, 0x21, 0xce,
	0xa6, 0x07, 0xa7, 0x50, 0x5b, 0x75, 0xe9, 0x41, 0x54, 0xa5, 0x6a, 0x9a, 0xc8, 0xb1, 0x08, 0x55,
	0xb5, 0x09, 0x2d, 0x87, 0x0b, 0x6b, 0xec, 0x9d, 0xac, 0x57, 0xd8, 0xbb, 0x2b, 0xef, 0x38, 0x6d,
	0x90, 0x90, 0x80, 0x0b, 0x04, 0x12, 0x37, 0x08, 0x51, 0x09, 0x2e, 0x91, 0xe0, 0x02, 0x24, 0xb8,
	0xe6, 0x21, 0xb8, 0x82, 0x17, 0x40, 0xf0, 0x06, 0xbc, 0x00, 0x9a, 0xd9, 0x59, 0xef, 0xc1, 0xc6,
	0x5e, 0xd3, 0x88, 0xbb, 0xdd, 0x6f, 0xbf, 0xc3, 0xef, 0xf7, 0x9d, 0x66, 0x6c, 0xb8, 0xe5, 0xf4,
	0x6d, 0x66, 0xbb, 0x55, 0x67, 0xd0, 0xea, 0x9a, 0xed, 0x6a, 0xcf, 0xd6, 0x69, 0x57, 0x6f, 0x55,
	0x8f, 0x68, 0xdf, 0x35, 0x6d, 0xcb, 0xb4, 0x8c, 0xea, 0xa3, 0xe1, 0xe3, 0x3e, 0xed, 0x1f, 0x99,
	0x6d, 0x5a, 0x11, 0x26, 0xf8, 0x2c, 0x31, 0x2b, 0x47, 0xb4, 0xcf, 0x48, 0x45, 0x1a, 0x55, 0x02,
	0x23, 0xe5, 0x9c, 0x61, 0xdb, 0x46, 0x97, 0x56, 0x89, 0x63, 0x56, 0x89, 0x65, 0xd9, 0x8c, 0x30,
	0xd3, 0xb6, 0x5c, 0xcf, 0x54, 0xd9, 0x1c, 0x1f, 0xf4, 0xbe, 0xdd, 0xeb, 0xd9, 0x56, 0x24, 0x8a,
	0x52, 0x99, 0x8a, 0x6f, 0x9b, 0x30, 0xe2, 0x52, 0xe6, 0x29, 0xaa, 0x1f, 0x23, 0xc8, 0x70, 0x3f,
	0x26, 0xc3, 0xab, 0x00, 0x0e, 0xe9, 0x53, 0x8b, 0x35, 0x4d, 0xdd, 0x2d, 0xa2, 0xd2, 0x5c, 0x39,
	0xab, 0x65, 0x3d, 0x49, 0x43, 0x77, 0xf1, 0x36, 0x2c, 0xb4, 0x6d, 0x8b, 0x51, 0x8b, 0x15, 0x53,
	0x25, 0x54, 0xce, 0xd5, 0x2e, 0x57, 0x26, 0x30, 0xaa, 0x78, 0x4e, 0xef, 0x7b, 0x16, 0x9a, 0x6f,
	0x8a, 0xcf, 0xc0, 0x02, 0xeb, 0x53, 0xda, 0x34, 0xf5, 0xe2, 0x5c, 0x09, 0x95, 0xb3, 0x5a, 0x86,
	0xbf, 0x36, 0x74, 0x75, 0x0f, 0xf2, 0x11, 0x13, 0x5c, 0x84, 0x85, 0x1e, 0x75, 0x5d, 0x62, 0xd0,
	0x22, 0x12, 0x9a, 0xfe, 0x2b, 0x5e, 0x87, 0x25, 0x9d, 0x30, 0xda, 0x6c, 0xf7, 0x29, 0x61, 0x54,
	0x17, 0x70, 0xd2, 0x5a, 0x8e, 0xcb, 0xee, 0x7b, 0x22, 0xf5, 0x2a, 0xe4, 0x0e, 0xfa, 0x94, 0xee,
	0x74, 0x69, 0x8f, 0xfb, 0x2a, 0x40, 0xca, 0xd4, 0xa5, 0x9b, 0x94, 0xa9, 0x63, 0x0c, 0x69, 0x8b,
	0xf4, 0xa8, 0xb0, 0xcc, 0x6a, 0xe2, 0x59, 0xfd, 0x0c, 0x41, 0x9a, 0xdb, 0xe0, 0x57, 0x61, 0xbe,
	0xd5, 0xb5, 0x5b, 0x5e, 0x0a, 0x72, 0xb5, 0xf2, 0x44, 0x9a, 0xa1, 0x28, 0x9a, 0x67, 0x86, 0xb7,
	0x61, 0xd1, 0x1d, 0xb4, 0x38, 0x2d, 0xb7, 0x98, 0x9a, 0xd1, 0xc5, 0xd0, 0x52, 0x7d, 0x0c, 0xe9,
	0xad, 0xae, 0xdd, 0xe2, 0x69, 0xd7, 0xbd, 0x8a, 0x09, 0xfc, 0xd3, 0x9c, 0xc9, 0xea, 0x72, 0xd3,
	0xdd, 0x53, 0x9a, 0x6f, 0xba, 0x95, 0x1d, 0x16, 0x4f, 0x7d, 0x0b, 0x96, 0xf8, 0xd7, 0x9d, 0xa7,
	0x0e, 0xb1, 0x74, 0x2a, 0x72, 0xe1, 0x10, 0xd6, 0x91, 0xd9, 0x11, 0xcf, 0xf8, 0x3a, 0xa4, 0x39,
	0x17, 0x59, 0xe8, 0xf5, 0x89, 0x11, 0xb9, 0x33, 0x4d, 0xa8, 0xab, 0x36, 0x2c, 0xf2, 0xb7, 0x6d,
	0xf3, 0xf0, 0x70, 0xac, 0xdb, 0x10, 0x97, 0x54, 0x72, 0x2e, 0xdc, 0xdd, 0x3f, 0x70, 0xf9, 0x30,
	0x05, 0x99, 0x1d, 0x8b, 0x99, 0xec, 0x18, 0xff, 0x0f, 0x32, 0x6e, 0x87, 0xd4, 0xae, 0xdf, 0x90,
	0x11, 0xe5, 0x1b, 0xde, 0x80, 0x7c, 0x9f, 0x3a, 0xb6, 0x6b, 0x32, 0xbb, 0x7f, 0xcc, 0xdb, 0xce,
	0xab, 0xf9, 0x52, 0x20, 0x6c, 0xe8, 0xf8, 0x0e, 0x64, 0xda, 0xa2, 0xf9, 0x44, 0x53, 0xe6, 0x6a,
	0x1b, 0x09, 0x5a, 0x7b, 0xf7, 0x94, 0x26, 0x8d, 0xf0, 0x4d, 0x48, 0xf3, 0xa2, 0x15, 0xd3, 0x09,
	0xd2, 0xc5, 0xab, 0xbd, 0x7b, 0x4a, 0x13, 0x06, 0xdc, 0x50, 0xe4, 0x79, 0x3e, 0x61, 0x9e, 0xb9,
	0x21, 0x37, 0x08, 0xe7, 0xe0, 0x2f, 0x04, 0xa0, 0x0d, 0xc9, 0x24, 0x69, 0xf5, 0x91, 0x01, 0x9a,
	0x1b, 0x19, 0xa0, 0xa1, 0xca, 0xc0, 0xd1, 0x85, 0x4a, 0x3a, 0x50, 0x79, 0xc3, 0x13, 0x71, 0x95,
	0x27, 0x76, 0xff, 0x5d, 0xd7, 0x21, 0x6d, 0x31, 0xcf, 0xf3, 0x22, 0x42, 0x6e, 0x28, 0x6b, 0xe8,
	0xf8, 0x4d, 0x28, 0x04, 0x2a, 0xec, 0xd8, 0xa1, 0xc5, 0x4c, 0x09, 0x95, 0x0b, 0xb5, 0xab, 0xa3,
	0x4c, 0x1f, 0xfb, 0x7a, 0x07, 0xc7, 0x0e, 0xdd, 0xb1, 0x06, 0xbd, 0xa8, 0x44, 0xcb, 0x3f, 0x09,
	0xbf, 0xaa, 0x3f, 0x21, 0xc8, 0xd7, 0x29, 0x9b, 0x91, 0xf8, 0x85, 0x30, 0x1e, 0xf1, 0xd5, 0x5b,
	0x42, 0x81, 0xf3, 0x07, 0xa4, 0x47, 0x95, 0x7d, 0x58, 0xd4, 0xa8, 0xeb, 0xd8, 0x96, 0x4b, 0x71,
	0x1d, 0x20, 0x68, 0x15, 0x39, 0x82, 0x97, 0x26, 0x16, 0x2a, 0xc0, 0xa4, 0x85, 0x4c, 0xd5, 0xdf,
	0x10, 0xe4, 0xf7, 0x23, 0x88, 0x4f, 0xca, 0xf5, 0x18, 0x5a, 0xa9, 0xff, 0x8c, 0xd6, 0x3b, 0xb0,
	0xbc, 0x4d, 0xbb, 0x94, 0xd1, 0x10, 0xb1, 0x91, 0x99, 0x43, 0xa3, 0x33, 0xa7, 0xa8, 0x21, 0x34,
	0x7c, 0x78, 0x19, 0x61, 0x03, 0x57, 0x68, 0x2e, 0x6a, 0xf2, 0x4d, 0x7d, 0x86, 0xa0, 0xb0, 0x45,
	0x58, 0xbb, 0x53, 0xa7, 0x4c, 0xce, 0x39, 0x86, 0xb4, 0xdb, 0x21, 0xfe, 0xf9, 0x24, 0x9e, 0x13,
	0xcd, 0xb8, 0xf2, 0x5a, 0x28, 0xde, 0x5d, 0x58, 0xa4, 0xdc, 0x9d, 0x49, 0xfd, 0x2d, 0x3f, 0x79,
	0xe2, 0xbd, 0xd8, 0xda, 0xd0, 0x48, 0xfd, 0x1c, 0x41, 0xf6, 0x9e, 0xae, 0x4b, 0x4c, 0xb7, 0x21,
	0x23, 0xbe, 0xf8, 0x89, 0x4c, 0xe4, 0x4c, 0x9a, 0x28, 0xf5, 0x10, 0xae, 0xe7, 0x71, 0xa4, 0xda,
	0xb0, 0xe4, 0x55, 0xe2, 0x04, 0x36, 0x62, 0xa2, 0xea, 0xfc, 0x90, 0x82, 0x15, 0x6f, 0x17, 0x06,
	0xb5, 0xdf, 0x12, 0x47, 0x60, 0x92, 0x06, 0x88, 0xdd, 0x37, 0x52, 0x13, 0xee, 0x1b, 0x73, 0xff,
	0xfe, 0xbe, 0x71, 0xd7, 0x3f, 0xcc, 0xd3, 0xa2, 0xcc, 0x9b, 0x53, 0x57, 0xac, 0x7f, 0x2e, 0xca,
	0xd3, 0x3c, 0x5e, 0x1e, 0x79, 0x4c, 0xa0, 0xc4, 0xc7, 0x84, 0x7f, 0x48, 0xa8, 0xbf, 0x20, 0xc0,
	0x91, 0x8d, 0x35, 0x43, 0xaa, 0xce, 0x42, 0xd6, 0xf3, 0x12, 0x94, 0x6b, 0xd1, 0x13, 0x34, 0x74,
	0x5c, 0x86, 0x65, 0xa3, 0x6b, 0xb7, 0x9a, 0xfc, 0x88, 0x6d, 0x3a, 0x7d, 0x7a, 0x68, 0x3e, 0x95,
	0x6b, 0xad, 0xc0, 0xe5, 0x0f, 0x09, 0xeb, 0x3c, 0x14, 0xd2, 0xd8, 0x08, 0x44, 0x6e, 0x39, 0x33,
	0x27, 0x46, 0xfd, 0x1d, 0xc1, 0xe9, 0x08, 0x1f, 0x71, 0xec, 0x27, 0xa2, 0xf3, 0x7f, 0x90, 0xe8,
	0x9b, 0x44, 0xb2, 0x59, 0xf0, 0xde, 0xef, 0x85, 0x3e, 0xb5, 0x24, 0x09, 0xf9, 0x69, 0x6b, 0x2c,
	0xcf, 0xf4, 0x58, 0x9e, 0xd1, 0x9a, 0xcd, 0xeb, 0xe6, 0xe1, 0xa1, 0xcf, 0xf3, 0xc2, 0x54, 0x9e,
	0x9c, 0x86, 0xe6, 0xd9, 0xa8, 0x3f, 0xa6, 0x60, 0x39, 0xc2, 0x71, 0xcf, 0x36, 0x92, 0x51, 0x5c,
	0x83, 0x9c, 0xcf, 0x83, 0xb8, 0xfe, 0x3e, 0x06, 0x49, 0x85, 0xb8, 0x34, 0xa4, 0xd0, 0xa1, 0xc4,
	0xbf, 0x0c, 0x4b, 0x85, 0x5d, 0x4a, 0xc6, 0x97, 0x35, 0x33, 0x8e, 0x2e, 0x77, 0xe5, 0x10, 0x83,
	0x36, 0xad, 0x41, 0xaf, 0x45, 0xfb, 0x22, 0x27, 0xf3, 0x1a, 0x70, 0xd1, 0x03, 0x21, 0xf1, 0x26,
	0xcd, 0xa0, 0xcd, 0xae, 0xc9, 0x7b, 0x77, 0x5e, 0x7c, 0xcf, 0x72, 0xc9, 0x1e, 0x17, 0x28, 0x8d,
	0x50, 0xba, 0xee, 0x80, 0xcc, 0x77, 0xb2, 0xc5, 0x28, 0x7b, 0xdc, 0xb7, 0x51, 0x3f, 0x40, 0x90,
	0xd9, 0xa7, 0xec, 0x80, 0x24, 0x4c, 0xd3, 0x32, 0xcc, 0x31, 0x62, 0xc8, 0xf4, 0xf0, 0xc7, 0x68,
	0xab, 0xcf, 0x45, 0x5b, 0x3d, 0xd1, 0x56, 0xfa, 0x04, 0x41, 0xa6, 0xfe, 0x3c, 0x10, 0x4e, 0x6c,
	0xe4, 0x6b, 0x7f, 0x14, 0xe0, 0xf4, 0xc8, 0xcf, 0x41, 0xfc, 0x0c, 0x41, 0xde, 0x88, 0x5c, 0x04,
	0x26, 0x6f, 0xb6, 0x48, 0x03, 0x2a, 0xd7, 0x92, 0xeb, 0x56, 0x7c, 0x16, 0xea, 0xf9, 0x8f, 0x7e,
	0xfd, 0xf3, 0x8b, 0xd4, 0x0b, 0xf8, 0x5c, 0xf5, 0xe8, 0x6a, 0xf8, 0xb7, 0x60, 0x14, 0xc6, 0x57,
	0x08, 0xf2, 0xee, 0x0c, 0xc0, 0xf6, 0x67, 0x00, 0xb6, 0x3f, 0x1e, 0xd8, 0x25, 0x01, 0x6c, 0x5d,
	0x8d, 0x03, 0x8b, 0xc0, 0x78, 0x05, 0x5d, 0xc6, 0xdf, 0x22, 0x58, 0xd6, 0xe3, 0xf7, 0x8c, 0x2b,
	0x93, 0x7f, 0x3e, 0xc4, 0xd4, 0x95, 0x1b, 0x33, 0xa9, 0x07, 0x20, 0x2f, 0x0b, 0x90, 0xe7, 0xd5,
	0xb5, 0x18, 0xc8, 0x38, 0x1e, 0x8e, 0xf3, 0x67, 0x04, 0x2b, 0xed, 0xb1, 0x67, 0x62, 0x2d, 0x49,
	0xe7, 0x44, 0x6d, 0x94, 0xdb, 0xb3, 0xdb, 0x04, 0xb0, 0xab, 0x02, 0xf6, 0xa6, 0x7a, 0x3e, 0x06,
	0x7b, 0x2c, 0x3c, 0x8e, 0xfd, 0x7b, 0x04, 0xd8, 0x18, 0x3d, 0xa1, 0xaa, 0xc9, 0x3b, 0xce, 0x43,
	0x7d, 0x6b, 0x46, 0x83, 0x00, 0xf2, 0xa6, 0x80, 0xbc, 0x81, 0xd7, 0x27, 0xf5, 0xa9, 0x87, 0xea,
	0x6b, 0x04, 0x85, 0x56, 0xf4, 0x6a, 0xf8, 0xe2, 0xe4, 0xdd, 0x1e, 0x51, 0x56, 0x5e, 0x9e, 0x41,
	0x39, 0x00, 0x78, 0x41, 0x00, 0x5c, 0xc3, 0xab, 0x31, 0x80, 0x31, 0x24, 0x9f, 0x22, 0xc8, 0x92,
	0xe1, 0xf5, 0xf0, 0xe2, 0xc4, 0x50, 0xc3, 0x6b, 0xa4, 0x52, 0x4d, 0xa6, 0x17, 0xa0, 0xd9, 0x10,
	0x68, 0x56, 0xd5, 0x62, 0x0c, 0xcd, 0x30, 0x34, 0xaf, 0xea, 0x97, 0x08, 0x96, 0xf4, 0xf0, 0xbd,
	0x70, 0x33, 0xc1, 0x18, 0x48, 0x44, 0xb5, 0xc4, 0xaa, 0x01, 0xa8, 0x8b, 0x02, 0x54, 0x49, 0x3d,
	0x3b, 0x76, 0x5a, 0x02, 0x5c, 0xdf, 0x21, 0x38, 0x6d, 0x8c, 0xdc, 0x1f, 0x2a, 0xc9, 0x7b, 0x87,
	0xeb, 0x2b, 0x37, 0x67, 0xd3, 0x0f, 0x60, 0x96, 0x05, 0x4c, 0x15, 0x97, 0x26, 0xb5, 0x9a, 0x80,
	0xf4, 0x0d, 0x82, 0x65, 0x23, 0x7e, 0x09, 0xb8, 0x92, 0x3c, 0xee, 0x9e, 0x6d, 0x4c, 0x59, 0x3d,
	0x71, 0xf5, 0x91, 0xfd, 0x88, 0xd7, 0x26, 0xa1, 0xe4, 0x78, 0xde, 0x87, 0x8c, 0x2b, 0x0f, 0xbd,
	0x69, 0x7b, 0xf8, 0x80, 0x18, 0xca, 0x4b, 0x09, 0x94, 0x02, 0x14, 0x25, 0x81, 0x42, 0x51, 0x57,
	0x46, 0xb7, 0xf4, 0x01, 0x31, 0x78, 0x31, 0xdf, 0x83, 0x8c, 0x91, 0x24, 0x7c, 0x3d, 0x49, 0xf8,
	0x7a, 0x2c, 0xfc, 0xaa, 0x08, 0x7f, 0x06, 0xaf, 0x8c, 0x26, 0xe1, 0x80, 0x18, 0x5b, 0xaf, 0x3f,
	0x44, 0x6f, 0x37, 0x0c, 0x93, 0x75, 0x06, 0xad, 0x4a, 0xdb, 0xee, 0x55, 0x1f, 0x71, 0xbf, 0xf7,
	0x1a, 0xc3, 0xff, 0x3e, 0xe5, 0x3f, 0xa2, 0x06, 0xb5, 0xaa, 0x86, 0x5d, 0x9d, 0xf6, 0xff, 0x68,
	0x2b, 0x23, 0x34, 0xae, 0xfd, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x19, 0xc1, 0x78, 0xfe, 0xea, 0x15,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// VersioningServiceClient is the client API for VersioningService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VersioningServiceClient interface {
	GetRepository(ctx context.Context, in *GetRepository, opts ...grpc.CallOption) (*GetRepository_Response, error)
	// If ID is missing, consider a new entry
	SetRepository(ctx context.Context, in *SetRepository, opts ...grpc.CallOption) (*SetRepository_Response, error)
	DeleteRepository(ctx context.Context, in *DeleteRepository, opts ...grpc.CallOption) (*DeleteRepository_Response, error)
	CommitRepositoryBlobs(ctx context.Context, in *CommitRepositoryBlobs, opts ...grpc.CallOption) (*CommitRepositoryBlobs_Response, error)
	GetRepositoryBlobs(ctx context.Context, in *GetRepositoryBlobs, opts ...grpc.CallOption) (*GetRepositoryBlobs_Response, error)
	BatchGetEntity(ctx context.Context, in *BatchGetEntity, opts ...grpc.CallOption) (*BatchGetEntity_Response, error)
	AddEntity(ctx context.Context, in *AddEntity, opts ...grpc.CallOption) (*AddEntity_Response, error)
	DeleteEntity(ctx context.Context, in *DeleteEntity, opts ...grpc.CallOption) (*DeleteEntity_Response, error)
	GetRepositoryDiff(ctx context.Context, in *GetRepositoryDiff, opts ...grpc.CallOption) (*GetRepositoryDiff_Response, error)
	GetRepositoryLog(ctx context.Context, in *GetRepositoryLog, opts ...grpc.CallOption) (*GetRepositoryLog_Response, error)
	SetTag(ctx context.Context, in *SetTag, opts ...grpc.CallOption) (*SetTag_Response, error)
	GetTag(ctx context.Context, in *GetTag, opts ...grpc.CallOption) (*GetTag_Response, error)
}

type versioningServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewVersioningServiceClient(cc grpc.ClientConnInterface) VersioningServiceClient {
	return &versioningServiceClient{cc}
}

func (c *versioningServiceClient) GetRepository(ctx context.Context, in *GetRepository, opts ...grpc.CallOption) (*GetRepository_Response, error) {
	out := new(GetRepository_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/getRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) SetRepository(ctx context.Context, in *SetRepository, opts ...grpc.CallOption) (*SetRepository_Response, error) {
	out := new(SetRepository_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/setRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) DeleteRepository(ctx context.Context, in *DeleteRepository, opts ...grpc.CallOption) (*DeleteRepository_Response, error) {
	out := new(DeleteRepository_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/deleteRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) CommitRepositoryBlobs(ctx context.Context, in *CommitRepositoryBlobs, opts ...grpc.CallOption) (*CommitRepositoryBlobs_Response, error) {
	out := new(CommitRepositoryBlobs_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/commitRepositoryBlobs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) GetRepositoryBlobs(ctx context.Context, in *GetRepositoryBlobs, opts ...grpc.CallOption) (*GetRepositoryBlobs_Response, error) {
	out := new(GetRepositoryBlobs_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/getRepositoryBlobs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) BatchGetEntity(ctx context.Context, in *BatchGetEntity, opts ...grpc.CallOption) (*BatchGetEntity_Response, error) {
	out := new(BatchGetEntity_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/batchGetEntity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) AddEntity(ctx context.Context, in *AddEntity, opts ...grpc.CallOption) (*AddEntity_Response, error) {
	out := new(AddEntity_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/addEntity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) DeleteEntity(ctx context.Context, in *DeleteEntity, opts ...grpc.CallOption) (*DeleteEntity_Response, error) {
	out := new(DeleteEntity_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/deleteEntity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) GetRepositoryDiff(ctx context.Context, in *GetRepositoryDiff, opts ...grpc.CallOption) (*GetRepositoryDiff_Response, error) {
	out := new(GetRepositoryDiff_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/getRepositoryDiff", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) GetRepositoryLog(ctx context.Context, in *GetRepositoryLog, opts ...grpc.CallOption) (*GetRepositoryLog_Response, error) {
	out := new(GetRepositoryLog_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/getRepositoryLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) SetTag(ctx context.Context, in *SetTag, opts ...grpc.CallOption) (*SetTag_Response, error) {
	out := new(SetTag_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/setTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *versioningServiceClient) GetTag(ctx context.Context, in *GetTag, opts ...grpc.CallOption) (*GetTag_Response, error) {
	out := new(GetTag_Response)
	err := c.cc.Invoke(ctx, "/ai.verta.modeldb.versioning.VersioningService/getTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VersioningServiceServer is the server API for VersioningService service.
type VersioningServiceServer interface {
	GetRepository(context.Context, *GetRepository) (*GetRepository_Response, error)
	// If ID is missing, consider a new entry
	SetRepository(context.Context, *SetRepository) (*SetRepository_Response, error)
	DeleteRepository(context.Context, *DeleteRepository) (*DeleteRepository_Response, error)
	CommitRepositoryBlobs(context.Context, *CommitRepositoryBlobs) (*CommitRepositoryBlobs_Response, error)
	GetRepositoryBlobs(context.Context, *GetRepositoryBlobs) (*GetRepositoryBlobs_Response, error)
	BatchGetEntity(context.Context, *BatchGetEntity) (*BatchGetEntity_Response, error)
	AddEntity(context.Context, *AddEntity) (*AddEntity_Response, error)
	DeleteEntity(context.Context, *DeleteEntity) (*DeleteEntity_Response, error)
	GetRepositoryDiff(context.Context, *GetRepositoryDiff) (*GetRepositoryDiff_Response, error)
	GetRepositoryLog(context.Context, *GetRepositoryLog) (*GetRepositoryLog_Response, error)
	SetTag(context.Context, *SetTag) (*SetTag_Response, error)
	GetTag(context.Context, *GetTag) (*GetTag_Response, error)
}

// UnimplementedVersioningServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVersioningServiceServer struct {
}

func (*UnimplementedVersioningServiceServer) GetRepository(ctx context.Context, req *GetRepository) (*GetRepository_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRepository not implemented")
}
func (*UnimplementedVersioningServiceServer) SetRepository(ctx context.Context, req *SetRepository) (*SetRepository_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRepository not implemented")
}
func (*UnimplementedVersioningServiceServer) DeleteRepository(ctx context.Context, req *DeleteRepository) (*DeleteRepository_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRepository not implemented")
}
func (*UnimplementedVersioningServiceServer) CommitRepositoryBlobs(ctx context.Context, req *CommitRepositoryBlobs) (*CommitRepositoryBlobs_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommitRepositoryBlobs not implemented")
}
func (*UnimplementedVersioningServiceServer) GetRepositoryBlobs(ctx context.Context, req *GetRepositoryBlobs) (*GetRepositoryBlobs_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRepositoryBlobs not implemented")
}
func (*UnimplementedVersioningServiceServer) BatchGetEntity(ctx context.Context, req *BatchGetEntity) (*BatchGetEntity_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchGetEntity not implemented")
}
func (*UnimplementedVersioningServiceServer) AddEntity(ctx context.Context, req *AddEntity) (*AddEntity_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddEntity not implemented")
}
func (*UnimplementedVersioningServiceServer) DeleteEntity(ctx context.Context, req *DeleteEntity) (*DeleteEntity_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEntity not implemented")
}
func (*UnimplementedVersioningServiceServer) GetRepositoryDiff(ctx context.Context, req *GetRepositoryDiff) (*GetRepositoryDiff_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRepositoryDiff not implemented")
}
func (*UnimplementedVersioningServiceServer) GetRepositoryLog(ctx context.Context, req *GetRepositoryLog) (*GetRepositoryLog_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRepositoryLog not implemented")
}
func (*UnimplementedVersioningServiceServer) SetTag(ctx context.Context, req *SetTag) (*SetTag_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTag not implemented")
}
func (*UnimplementedVersioningServiceServer) GetTag(ctx context.Context, req *GetTag) (*GetTag_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTag not implemented")
}

func RegisterVersioningServiceServer(s *grpc.Server, srv VersioningServiceServer) {
	s.RegisterService(&_VersioningService_serviceDesc, srv)
}

func _VersioningService_GetRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRepository)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).GetRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/GetRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).GetRepository(ctx, req.(*GetRepository))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_SetRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRepository)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).SetRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/SetRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).SetRepository(ctx, req.(*SetRepository))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_DeleteRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRepository)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).DeleteRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/DeleteRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).DeleteRepository(ctx, req.(*DeleteRepository))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_CommitRepositoryBlobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommitRepositoryBlobs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).CommitRepositoryBlobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/CommitRepositoryBlobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).CommitRepositoryBlobs(ctx, req.(*CommitRepositoryBlobs))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_GetRepositoryBlobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRepositoryBlobs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).GetRepositoryBlobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/GetRepositoryBlobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).GetRepositoryBlobs(ctx, req.(*GetRepositoryBlobs))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_BatchGetEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchGetEntity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).BatchGetEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/BatchGetEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).BatchGetEntity(ctx, req.(*BatchGetEntity))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_AddEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddEntity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).AddEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/AddEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).AddEntity(ctx, req.(*AddEntity))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_DeleteEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEntity)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).DeleteEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/DeleteEntity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).DeleteEntity(ctx, req.(*DeleteEntity))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_GetRepositoryDiff_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRepositoryDiff)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).GetRepositoryDiff(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/GetRepositoryDiff",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).GetRepositoryDiff(ctx, req.(*GetRepositoryDiff))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_GetRepositoryLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRepositoryLog)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).GetRepositoryLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/GetRepositoryLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).GetRepositoryLog(ctx, req.(*GetRepositoryLog))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_SetTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetTag)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).SetTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/SetTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).SetTag(ctx, req.(*SetTag))
	}
	return interceptor(ctx, in, info, handler)
}

func _VersioningService_GetTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTag)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VersioningServiceServer).GetTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ai.verta.modeldb.versioning.VersioningService/GetTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VersioningServiceServer).GetTag(ctx, req.(*GetTag))
	}
	return interceptor(ctx, in, info, handler)
}

var _VersioningService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ai.verta.modeldb.versioning.VersioningService",
	HandlerType: (*VersioningServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getRepository",
			Handler:    _VersioningService_GetRepository_Handler,
		},
		{
			MethodName: "setRepository",
			Handler:    _VersioningService_SetRepository_Handler,
		},
		{
			MethodName: "deleteRepository",
			Handler:    _VersioningService_DeleteRepository_Handler,
		},
		{
			MethodName: "commitRepositoryBlobs",
			Handler:    _VersioningService_CommitRepositoryBlobs_Handler,
		},
		{
			MethodName: "getRepositoryBlobs",
			Handler:    _VersioningService_GetRepositoryBlobs_Handler,
		},
		{
			MethodName: "batchGetEntity",
			Handler:    _VersioningService_BatchGetEntity_Handler,
		},
		{
			MethodName: "addEntity",
			Handler:    _VersioningService_AddEntity_Handler,
		},
		{
			MethodName: "deleteEntity",
			Handler:    _VersioningService_DeleteEntity_Handler,
		},
		{
			MethodName: "getRepositoryDiff",
			Handler:    _VersioningService_GetRepositoryDiff_Handler,
		},
		{
			MethodName: "getRepositoryLog",
			Handler:    _VersioningService_GetRepositoryLog_Handler,
		},
		{
			MethodName: "setTag",
			Handler:    _VersioningService_SetTag_Handler,
		},
		{
			MethodName: "getTag",
			Handler:    _VersioningService_GetTag_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/public/modeldb/versioning/VersioningService.proto",
}
