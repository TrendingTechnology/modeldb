# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/public/modeldb/versioning/VersioningService.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from ...public.modeldb import CommonService_pb2 as protos_dot_public_dot_modeldb_dot_CommonService__pb2
from ...public.modeldb.versioning import Dataset_pb2 as protos_dot_public_dot_modeldb_dot_versioning_dot_Dataset__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='protos/public/modeldb/versioning/VersioningService.proto',
  package='ai.verta.modeldb.versioning',
  syntax='proto3',
  serialized_options=_b('P\001ZIgithub.com/VertaAI/modeldb/protos/gen/go/protos/public/modeldb/versioning'),
  serialized_pb=_b('\n8protos/public/modeldb/versioning/VersioningService.proto\x12\x1b\x61i.verta.modeldb.versioning\x1a\x1cgoogle/api/annotations.proto\x1a)protos/public/modeldb/CommonService.proto\x1a.protos/public/modeldb/versioning/Dataset.proto\"q\n\x0eInternalCommit\x12\x13\n\x0bparent_shas\x18\x01 \x03(\t\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x14\n\x0c\x64\x61te_created\x18\x03 \x01(\x04\x12\x0e\n\x06\x61uthor\x18\x04 \x01(\t\x12\x13\n\nfolder_sha\x18\xe8\x07 \x01(\t\"T\n\x06\x43ommit\x12\x13\n\x0bparent_shas\x18\x01 \x03(\t\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x14\n\x0c\x64\x61te_created\x18\x03 \x01(\x04\x12\x0e\n\x06\x61uthor\x18\x04 \x01(\t\"B\n\x15InternalFolderElement\x12\x13\n\x0b\x65lement_sha\x18\x01 \x01(\t\x12\x14\n\x0c\x65lement_name\x18\x02 \x01(\t\"\x9b\x01\n\x0eInternalFolder\x12\x41\n\x05\x62lobs\x18\x01 \x03(\x0b\x32\x32.ai.verta.modeldb.versioning.InternalFolderElement\x12\x46\n\nsubfolders\x18\x02 \x03(\x0b\x32\x32.ai.verta.modeldb.versioning.InternalFolderElement\"@\n\rFolderElement\x12\x14\n\x0c\x65lement_name\x18\x02 \x01(\t\x12\x19\n\x11\x63reated_by_commit\x18\x03 \x01(\t\"\x83\x01\n\x06\x46older\x12\x39\n\x05\x62lobs\x18\x01 \x03(\x0b\x32*.ai.verta.modeldb.versioning.FolderElement\x12>\n\nsubfolders\x18\x02 \x03(\x0b\x32*.ai.verta.modeldb.versioning.FolderElement\"N\n\x04\x42lob\x12;\n\x07\x64\x61taset\x18\x02 \x01(\x0b\x32(.ai.verta.modeldb.versioning.DatasetBlobH\x00\x42\t\n\x07\x63ontent\"M\n\x0c\x42lobExpanded\x12\x0c\n\x04path\x18\x01 \x01(\t\x12/\n\x04\x62lob\x18\x02 \x01(\x0b\x32!.ai.verta.modeldb.versioning.Blob\"`\n\x08\x42lobDiff\x12\x0c\n\x04path\x18\x01 \x01(\t\x12;\n\x07\x64\x61taset\x18\x02 \x01(\x0b\x32(.ai.verta.modeldb.versioning.DatasetDiffH\x00\x42\t\n\x07\x63ontent\"\xb3\x01\n\nRepository\x12\n\n\x02id\x18\x01 \x01(\x04\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x14\n\x0c\x64\x61te_created\x18\x03 \x01(\x04\x12\x14\n\x0c\x64\x61te_updated\x18\x04 \x01(\x04\x12\x14\n\x0cworkspace_id\x18\x05 \x01(\t\x12I\n\x0eworkspace_type\x18\x06 \x01(\x0e\x32\x31.ai.verta.modeldb.WorkspaceTypeEnum.WorkspaceType\"5\n\nPagination\x12\x13\n\x0bpage_number\x18\x02 \x01(\x05\x12\x12\n\npage_limit\x18\x03 \x01(\x05\"E\n\x1dRepositoryNamedIdentification\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x16\n\x0eworkspace_name\x18\x02 \x01(\t\"}\n\x18RepositoryIdentification\x12K\n\x05named\x18\x01 \x01(\x0b\x32:.ai.verta.modeldb.versioning.RepositoryNamedIdentificationH\x00\x12\x0e\n\x04\x63ode\x18\x02 \x01(\x04H\x00\x42\x04\n\x02id\"\xb7\x01\n\x17ListRepositoriesRequest\x12\x16\n\x0eworkspace_name\x18\x01 \x01(\t\x12;\n\npagination\x18\x02 \x01(\x0b\x32\'.ai.verta.modeldb.versioning.Pagination\x1aG\n\x08Response\x12;\n\nrepository\x18\x01 \x03(\x0b\x32\'.ai.verta.modeldb.versioning.Repository\"\xa2\x01\n\x14GetRepositoryRequest\x12\x41\n\x02id\x18\x01 \x01(\x0b\x32\x35.ai.verta.modeldb.versioning.RepositoryIdentification\x1aG\n\x08Response\x12;\n\nrepository\x18\x01 \x01(\x0b\x32\'.ai.verta.modeldb.versioning.Repository\"\xd8\x01\n\rSetRepository\x12\x41\n\x02id\x18\x01 \x01(\x0b\x32\x35.ai.verta.modeldb.versioning.RepositoryIdentification\x12;\n\nrepository\x18\x02 \x01(\x0b\x32\'.ai.verta.modeldb.versioning.Repository\x1aG\n\x08Response\x12;\n\nrepository\x18\x01 \x01(\x0b\x32\'.ai.verta.modeldb.versioning.Repository\"h\n\x17\x44\x65leteRepositoryRequest\x12\x41\n\x02id\x18\x01 \x01(\x0b\x32\x35.ai.verta.modeldb.versioning.RepositoryIdentification\x1a\n\n\x08Response\"\xa0\x02\n\x12ListCommitsRequest\x12L\n\rrepository_id\x18\x01 \x01(\x0b\x32\x35.ai.verta.modeldb.versioning.RepositoryIdentification\x12;\n\npagination\x18\x02 \x01(\x0b\x32\'.ai.verta.modeldb.versioning.Pagination\x12\x13\n\x0b\x63ommit_base\x18\x03 \x01(\t\x12\x13\n\x0b\x63ommit_head\x18\x04 \x01(\t\x12\x13\n\x0bpath_prefix\x18\x05 \x01(\t\x1a@\n\x08Response\x12\x34\n\x07\x63ommits\x18\x01 \x03(\x0b\x32#.ai.verta.modeldb.versioning.Commit\"\xb5\x01\n\x10GetCommitRequest\x12L\n\rrepository_id\x18\x01 \x01(\x0b\x32\x35.ai.verta.modeldb.versioning.RepositoryIdentification\x12\x12\n\ncommit_sha\x18\x02 \x01(\t\x1a?\n\x08Response\x12\x33\n\x06\x63ommit\x18\x01 \x01(\x0b\x32#.ai.verta.modeldb.versioning.Commit\"\x93\x02\n\x13\x43reateCommitRequest\x12L\n\rrepository_id\x18\x01 \x01(\x0b\x32\x35.ai.verta.modeldb.versioning.RepositoryIdentification\x12\x33\n\x06\x63ommit\x18\x02 \x01(\x0b\x32#.ai.verta.modeldb.versioning.Commit\x12\x38\n\x05\x62lobs\x18\x03 \x03(\x0b\x32).ai.verta.modeldb.versioning.BlobExpanded\x1a?\n\x08Response\x12\x33\n\x06\x63ommit\x18\x01 \x01(\x0b\x32#.ai.verta.modeldb.versioning.Commit\"\x83\x01\n\x13\x44\x65leteCommitRequest\x12L\n\rrepository_id\x18\x01 \x01(\x0b\x32\x35.ai.verta.modeldb.versioning.RepositoryIdentification\x12\x12\n\ncommit_sha\x18\x02 \x01(\t\x1a\n\n\x08Response\"\x92\x02\n\x16ListCommitBlobsRequest\x12L\n\rrepository_id\x18\x01 \x01(\x0b\x32\x35.ai.verta.modeldb.versioning.RepositoryIdentification\x12;\n\npagination\x18\x02 \x01(\x0b\x32\'.ai.verta.modeldb.versioning.Pagination\x12\x12\n\ncommit_sha\x18\x03 \x01(\t\x12\x13\n\x0bpath_prefix\x18\x04 \x01(\t\x1a\x44\n\x08Response\x12\x38\n\x05\x62lobs\x18\x01 \x03(\x0b\x32).ai.verta.modeldb.versioning.BlobExpanded\"\xc3\x01\n\x14GetCommitBlobRequest\x12L\n\rrepository_id\x18\x01 \x01(\x0b\x32\x35.ai.verta.modeldb.versioning.RepositoryIdentification\x12\x12\n\ncommit_sha\x18\x02 \x01(\t\x12\x0c\n\x04path\x18\x03 \x01(\t\x1a;\n\x08Response\x12/\n\x04\x62lob\x18\x01 \x01(\x0b\x32!.ai.verta.modeldb.versioning.Blob\"\xc9\x01\n\x16GetCommitFolderRequest\x12L\n\rrepository_id\x18\x01 \x01(\x0b\x32\x35.ai.verta.modeldb.versioning.RepositoryIdentification\x12\x12\n\ncommit_sha\x18\x02 \x01(\t\x12\x0c\n\x04path\x18\x03 \x01(\t\x1a?\n\x08Response\x12\x33\n\x06\x66older\x18\x01 \x01(\x0b\x32#.ai.verta.modeldb.versioning.Folder\"\xe7\x01\n\x1c\x43omputeRepositoryDiffRequest\x12L\n\rrepository_id\x18\x01 \x01(\x0b\x32\x35.ai.verta.modeldb.versioning.RepositoryIdentification\x12\x10\n\x08\x63ommit_a\x18\x02 \x01(\t\x12\x10\n\x08\x63ommit_b\x18\x03 \x01(\t\x12\x13\n\x0bpath_prefix\x18\x04 \x01(\t\x1a@\n\x08Response\x12\x34\n\x05\x64iffs\x18\x01 \x03(\x0b\x32%.ai.verta.modeldb.versioning.BlobDiff\"y\n\x0fListTagsRequest\x12L\n\rrepository_id\x18\x01 \x01(\x0b\x32\x35.ai.verta.modeldb.versioning.RepositoryIdentification\x1a\x18\n\x08Response\x12\x0c\n\x04tags\x18\x01 \x03(\t\"\xab\x01\n\rGetTagRequest\x12L\n\rrepository_id\x18\x01 \x01(\x0b\x32\x35.ai.verta.modeldb.versioning.RepositoryIdentification\x12\x0b\n\x03tag\x18\x02 \x01(\t\x1a?\n\x08Response\x12\x33\n\x06\x63ommit\x18\x01 \x01(\x0b\x32#.ai.verta.modeldb.versioning.Commit\"\x8a\x01\n\rSetTagRequest\x12L\n\rrepository_id\x18\x01 \x01(\x0b\x32\x35.ai.verta.modeldb.versioning.RepositoryIdentification\x12\x0b\n\x03tag\x18\x02 \x01(\t\x12\x12\n\ncommit_sha\x18\x03 \x01(\t\x1a\n\n\x08Response\"y\n\x10\x44\x65leteTagRequest\x12L\n\rrepository_id\x18\x01 \x01(\x0b\x32\x35.ai.verta.modeldb.versioning.RepositoryIdentification\x12\x0b\n\x03tag\x18\x02 \x01(\t\x1a\n\n\x08Response2\xc3(\n\x11VersioningService\x12\xe7\x01\n\x10ListRepositories\x12\x34.ai.verta.modeldb.versioning.ListRepositoriesRequest\x1a=.ai.verta.modeldb.versioning.ListRepositoriesRequest.Response\"^\x82\xd3\xe4\x93\x02X\x12\x37/v1/versioning/workspaces/{workspace_name}/repositoriesZ\x1d\x12\x1b/v1/versioning/repositories\x12\x82\x02\n\rGetRepository\x12\x31.ai.verta.modeldb.versioning.GetRepositoryRequest\x1a:.ai.verta.modeldb.versioning.GetRepositoryRequest.Response\"\x81\x01\x82\xd3\xe4\x93\x02{\x12P/v1/versioning/workspaces/{id.named.workspace_name}/repositories/{id.named.name}Z\'\x12%/v1/versioning/repositories/{id.code}\x12\xc9\x01\n\x10\x43reateRepository\x12*.ai.verta.modeldb.versioning.SetRepository\x1a\x33.ai.verta.modeldb.versioning.SetRepository.Response\"T\x82\xd3\xe4\x93\x02N\"@/v1/versioning/workspaces/{id.named.workspace_name}/repositories:\nrepository\x12\x90\x02\n\x10UpdateRepository\x12*.ai.verta.modeldb.versioning.SetRepository\x1a\x33.ai.verta.modeldb.versioning.SetRepository.Response\"\x9a\x01\x82\xd3\xe4\x93\x02\x93\x01\x1aP/v1/versioning/workspaces/{id.named.workspace_name}/repositories/{id.named.name}:\nrepositoryZ3\x1a%/v1/versioning/repositories/{id.code}:\nrepository\x12\x8b\x02\n\x10\x44\x65leteRepository\x12\x34.ai.verta.modeldb.versioning.DeleteRepositoryRequest\x1a=.ai.verta.modeldb.versioning.DeleteRepositoryRequest.Response\"\x81\x01\x82\xd3\xe4\x93\x02{*P/v1/versioning/workspaces/{id.named.workspace_name}/repositories/{id.named.name}Z\'*%/v1/versioning/repositories/{id.code}\x12\xae\x02\n\x0bListCommits\x12/.ai.verta.modeldb.versioning.ListCommitsRequest\x1a\x38.ai.verta.modeldb.versioning.ListCommitsRequest.Response\"\xb3\x01\x82\xd3\xe4\x93\x02\xac\x01\x12n/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/commitsZ:\x12\x38/v1/versioning/repositories/{repository_id.code}/commits\x12\xc2\x02\n\tGetCommit\x12-.ai.verta.modeldb.versioning.GetCommitRequest\x1a\x36.ai.verta.modeldb.versioning.GetCommitRequest.Response\"\xcd\x01\x82\xd3\xe4\x93\x02\xc6\x01\x12{/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/commits/{commit_sha}ZG\x12\x45/v1/versioning/repositories/{repository_id.code}/commits/{commit_sha}\x12\xb7\x02\n\x0c\x43reateCommit\x12\x30.ai.verta.modeldb.versioning.CreateCommitRequest\x1a\x39.ai.verta.modeldb.versioning.CreateCommitRequest.Response\"\xb9\x01\x82\xd3\xe4\x93\x02\xb2\x01\"n/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/commits:\x01*Z=\x1a\x38/v1/versioning/repositories/{repository_id.code}/commits:\x01*\x12\xcb\x02\n\x0c\x44\x65leteCommit\x12\x30.ai.verta.modeldb.versioning.DeleteCommitRequest\x1a\x39.ai.verta.modeldb.versioning.DeleteCommitRequest.Response\"\xcd\x01\x82\xd3\xe4\x93\x02\xc6\x01*{/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/commits/{commit_sha}ZG*E/v1/versioning/repositories/{repository_id.code}/commits/{commit_sha}\x12\xe1\x02\n\x0fListCommitBlobs\x12\x33.ai.verta.modeldb.versioning.ListCommitBlobsRequest\x1a<.ai.verta.modeldb.versioning.ListCommitBlobsRequest.Response\"\xda\x01\x82\xd3\xe4\x93\x02\xd3\x01\x12\x81\x01/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/commits/{commit_sha}/blobsZM\x12K/v1/versioning/repositories/{repository_id.code}/commits/{commit_sha}/blobs\x12\xef\x02\n\rGetCommitBlob\x12\x31.ai.verta.modeldb.versioning.GetCommitBlobRequest\x1a:.ai.verta.modeldb.versioning.GetCommitBlobRequest.Response\"\xee\x01\x82\xd3\xe4\x93\x02\xe7\x01\x12\x8b\x01/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/commits/{commit_sha}/blobs/{path=**}ZW\x12U/v1/versioning/repositories/{repository_id.code}/commits/{commit_sha}/blobs/{path=**}\x12\xf9\x02\n\x0fGetCommitFolder\x12\x33.ai.verta.modeldb.versioning.GetCommitFolderRequest\x1a<.ai.verta.modeldb.versioning.GetCommitFolderRequest.Response\"\xf2\x01\x82\xd3\xe4\x93\x02\xeb\x01\x12\x8d\x01/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/commits/{commit_sha}/folders/{path=**}ZY\x12W/v1/versioning/repositories/{repository_id.code}/commits/{commit_sha}/folders/{path=**}\x12\xc6\x02\n\x15\x43omputeRepositoryDiff\x12\x39.ai.verta.modeldb.versioning.ComputeRepositoryDiffRequest\x1a\x42.ai.verta.modeldb.versioning.ComputeRepositoryDiffRequest.Response\"\xad\x01\x82\xd3\xe4\x93\x02\xa6\x01\x12k/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/diffZ7\x12\x35/v1/versioning/repositories/{repository_id.code}/diff\x12\x9f\x02\n\x08ListTags\x12,.ai.verta.modeldb.versioning.ListTagsRequest\x1a\x35.ai.verta.modeldb.versioning.ListTagsRequest.Response\"\xad\x01\x82\xd3\xe4\x93\x02\xa6\x01\x12k/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/tagsZ7\x12\x35/v1/versioning/repositories/{repository_id.code}/tags\x12\xa5\x02\n\x06GetTag\x12*.ai.verta.modeldb.versioning.GetTagRequest\x1a\x33.ai.verta.modeldb.versioning.GetTagRequest.Response\"\xb9\x01\x82\xd3\xe4\x93\x02\xb2\x01\x12q/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/tags/{tag}Z=\x12;/v1/versioning/repositories/{repository_id.code}/tags/{tag}\x12\xbd\x02\n\x06SetTag\x12*.ai.verta.modeldb.versioning.SetTagRequest\x1a\x33.ai.verta.modeldb.versioning.SetTagRequest.Response\"\xd1\x01\x82\xd3\xe4\x93\x02\xca\x01\x1aq/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/tags/{tag}:\ncommit_shaZI\x1a;/v1/versioning/repositories/{repository_id.code}/tags/{tag}:\ncommit_sha\x12\xae\x02\n\tDeleteTag\x12-.ai.verta.modeldb.versioning.DeleteTagRequest\x1a\x36.ai.verta.modeldb.versioning.DeleteTagRequest.Response\"\xb9\x01\x82\xd3\xe4\x93\x02\xb2\x01*q/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/tags/{tag}Z=*;/v1/versioning/repositories/{repository_id.code}/tags/{tag}BMP\x01ZIgithub.com/VertaAI/modeldb/protos/gen/go/protos/public/modeldb/versioningb\x06proto3')
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,protos_dot_public_dot_modeldb_dot_CommonService__pb2.DESCRIPTOR,protos_dot_public_dot_modeldb_dot_versioning_dot_Dataset__pb2.DESCRIPTOR,])




_INTERNALCOMMIT = _descriptor.Descriptor(
  name='InternalCommit',
  full_name='ai.verta.modeldb.versioning.InternalCommit',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parent_shas', full_name='ai.verta.modeldb.versioning.InternalCommit.parent_shas', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message', full_name='ai.verta.modeldb.versioning.InternalCommit.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='date_created', full_name='ai.verta.modeldb.versioning.InternalCommit.date_created', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='author', full_name='ai.verta.modeldb.versioning.InternalCommit.author', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='folder_sha', full_name='ai.verta.modeldb.versioning.InternalCommit.folder_sha', index=4,
      number=1000, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=210,
  serialized_end=323,
)


_COMMIT = _descriptor.Descriptor(
  name='Commit',
  full_name='ai.verta.modeldb.versioning.Commit',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parent_shas', full_name='ai.verta.modeldb.versioning.Commit.parent_shas', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message', full_name='ai.verta.modeldb.versioning.Commit.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='date_created', full_name='ai.verta.modeldb.versioning.Commit.date_created', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='author', full_name='ai.verta.modeldb.versioning.Commit.author', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=325,
  serialized_end=409,
)


_INTERNALFOLDERELEMENT = _descriptor.Descriptor(
  name='InternalFolderElement',
  full_name='ai.verta.modeldb.versioning.InternalFolderElement',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='element_sha', full_name='ai.verta.modeldb.versioning.InternalFolderElement.element_sha', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='element_name', full_name='ai.verta.modeldb.versioning.InternalFolderElement.element_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=411,
  serialized_end=477,
)


_INTERNALFOLDER = _descriptor.Descriptor(
  name='InternalFolder',
  full_name='ai.verta.modeldb.versioning.InternalFolder',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='blobs', full_name='ai.verta.modeldb.versioning.InternalFolder.blobs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='subfolders', full_name='ai.verta.modeldb.versioning.InternalFolder.subfolders', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=480,
  serialized_end=635,
)


_FOLDERELEMENT = _descriptor.Descriptor(
  name='FolderElement',
  full_name='ai.verta.modeldb.versioning.FolderElement',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='element_name', full_name='ai.verta.modeldb.versioning.FolderElement.element_name', index=0,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='created_by_commit', full_name='ai.verta.modeldb.versioning.FolderElement.created_by_commit', index=1,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=637,
  serialized_end=701,
)


_FOLDER = _descriptor.Descriptor(
  name='Folder',
  full_name='ai.verta.modeldb.versioning.Folder',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='blobs', full_name='ai.verta.modeldb.versioning.Folder.blobs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='subfolders', full_name='ai.verta.modeldb.versioning.Folder.subfolders', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=704,
  serialized_end=835,
)


_BLOB = _descriptor.Descriptor(
  name='Blob',
  full_name='ai.verta.modeldb.versioning.Blob',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dataset', full_name='ai.verta.modeldb.versioning.Blob.dataset', index=0,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='content', full_name='ai.verta.modeldb.versioning.Blob.content',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=837,
  serialized_end=915,
)


_BLOBEXPANDED = _descriptor.Descriptor(
  name='BlobExpanded',
  full_name='ai.verta.modeldb.versioning.BlobExpanded',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='ai.verta.modeldb.versioning.BlobExpanded.path', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='blob', full_name='ai.verta.modeldb.versioning.BlobExpanded.blob', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=917,
  serialized_end=994,
)


_BLOBDIFF = _descriptor.Descriptor(
  name='BlobDiff',
  full_name='ai.verta.modeldb.versioning.BlobDiff',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='path', full_name='ai.verta.modeldb.versioning.BlobDiff.path', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dataset', full_name='ai.verta.modeldb.versioning.BlobDiff.dataset', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='content', full_name='ai.verta.modeldb.versioning.BlobDiff.content',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=996,
  serialized_end=1092,
)


_REPOSITORY = _descriptor.Descriptor(
  name='Repository',
  full_name='ai.verta.modeldb.versioning.Repository',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ai.verta.modeldb.versioning.Repository.id', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='ai.verta.modeldb.versioning.Repository.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='date_created', full_name='ai.verta.modeldb.versioning.Repository.date_created', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='date_updated', full_name='ai.verta.modeldb.versioning.Repository.date_updated', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='workspace_id', full_name='ai.verta.modeldb.versioning.Repository.workspace_id', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='workspace_type', full_name='ai.verta.modeldb.versioning.Repository.workspace_type', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1095,
  serialized_end=1274,
)


_PAGINATION = _descriptor.Descriptor(
  name='Pagination',
  full_name='ai.verta.modeldb.versioning.Pagination',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='page_number', full_name='ai.verta.modeldb.versioning.Pagination.page_number', index=0,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='page_limit', full_name='ai.verta.modeldb.versioning.Pagination.page_limit', index=1,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1276,
  serialized_end=1329,
)


_REPOSITORYNAMEDIDENTIFICATION = _descriptor.Descriptor(
  name='RepositoryNamedIdentification',
  full_name='ai.verta.modeldb.versioning.RepositoryNamedIdentification',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='ai.verta.modeldb.versioning.RepositoryNamedIdentification.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='workspace_name', full_name='ai.verta.modeldb.versioning.RepositoryNamedIdentification.workspace_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1331,
  serialized_end=1400,
)


_REPOSITORYIDENTIFICATION = _descriptor.Descriptor(
  name='RepositoryIdentification',
  full_name='ai.verta.modeldb.versioning.RepositoryIdentification',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='named', full_name='ai.verta.modeldb.versioning.RepositoryIdentification.named', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='code', full_name='ai.verta.modeldb.versioning.RepositoryIdentification.code', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='id', full_name='ai.verta.modeldb.versioning.RepositoryIdentification.id',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1402,
  serialized_end=1527,
)


_LISTREPOSITORIESREQUEST_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.ListRepositoriesRequest.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='ai.verta.modeldb.versioning.ListRepositoriesRequest.Response.repository', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1642,
  serialized_end=1713,
)

_LISTREPOSITORIESREQUEST = _descriptor.Descriptor(
  name='ListRepositoriesRequest',
  full_name='ai.verta.modeldb.versioning.ListRepositoriesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='workspace_name', full_name='ai.verta.modeldb.versioning.ListRepositoriesRequest.workspace_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pagination', full_name='ai.verta.modeldb.versioning.ListRepositoriesRequest.pagination', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_LISTREPOSITORIESREQUEST_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1530,
  serialized_end=1713,
)


_GETREPOSITORYREQUEST_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.GetRepositoryRequest.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='ai.verta.modeldb.versioning.GetRepositoryRequest.Response.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1807,
  serialized_end=1878,
)

_GETREPOSITORYREQUEST = _descriptor.Descriptor(
  name='GetRepositoryRequest',
  full_name='ai.verta.modeldb.versioning.GetRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ai.verta.modeldb.versioning.GetRepositoryRequest.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_GETREPOSITORYREQUEST_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1716,
  serialized_end=1878,
)


_SETREPOSITORY_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.SetRepository.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository', full_name='ai.verta.modeldb.versioning.SetRepository.Response.repository', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1807,
  serialized_end=1878,
)

_SETREPOSITORY = _descriptor.Descriptor(
  name='SetRepository',
  full_name='ai.verta.modeldb.versioning.SetRepository',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ai.verta.modeldb.versioning.SetRepository.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='repository', full_name='ai.verta.modeldb.versioning.SetRepository.repository', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_SETREPOSITORY_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1881,
  serialized_end=2097,
)


_DELETEREPOSITORYREQUEST_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.DeleteRepositoryRequest.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1642,
  serialized_end=1652,
)

_DELETEREPOSITORYREQUEST = _descriptor.Descriptor(
  name='DeleteRepositoryRequest',
  full_name='ai.verta.modeldb.versioning.DeleteRepositoryRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ai.verta.modeldb.versioning.DeleteRepositoryRequest.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_DELETEREPOSITORYREQUEST_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2099,
  serialized_end=2203,
)


_LISTCOMMITSREQUEST_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.ListCommitsRequest.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='commits', full_name='ai.verta.modeldb.versioning.ListCommitsRequest.Response.commits', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2430,
  serialized_end=2494,
)

_LISTCOMMITSREQUEST = _descriptor.Descriptor(
  name='ListCommitsRequest',
  full_name='ai.verta.modeldb.versioning.ListCommitsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='ai.verta.modeldb.versioning.ListCommitsRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pagination', full_name='ai.verta.modeldb.versioning.ListCommitsRequest.pagination', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_base', full_name='ai.verta.modeldb.versioning.ListCommitsRequest.commit_base', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_head', full_name='ai.verta.modeldb.versioning.ListCommitsRequest.commit_head', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='path_prefix', full_name='ai.verta.modeldb.versioning.ListCommitsRequest.path_prefix', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_LISTCOMMITSREQUEST_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2206,
  serialized_end=2494,
)


_GETCOMMITREQUEST_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.GetCommitRequest.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit', full_name='ai.verta.modeldb.versioning.GetCommitRequest.Response.commit', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2615,
  serialized_end=2678,
)

_GETCOMMITREQUEST = _descriptor.Descriptor(
  name='GetCommitRequest',
  full_name='ai.verta.modeldb.versioning.GetCommitRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='ai.verta.modeldb.versioning.GetCommitRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_sha', full_name='ai.verta.modeldb.versioning.GetCommitRequest.commit_sha', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_GETCOMMITREQUEST_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2497,
  serialized_end=2678,
)


_CREATECOMMITREQUEST_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.CreateCommitRequest.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit', full_name='ai.verta.modeldb.versioning.CreateCommitRequest.Response.commit', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2615,
  serialized_end=2678,
)

_CREATECOMMITREQUEST = _descriptor.Descriptor(
  name='CreateCommitRequest',
  full_name='ai.verta.modeldb.versioning.CreateCommitRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='ai.verta.modeldb.versioning.CreateCommitRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit', full_name='ai.verta.modeldb.versioning.CreateCommitRequest.commit', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='blobs', full_name='ai.verta.modeldb.versioning.CreateCommitRequest.blobs', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_CREATECOMMITREQUEST_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2681,
  serialized_end=2956,
)


_DELETECOMMITREQUEST_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.DeleteCommitRequest.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1642,
  serialized_end=1652,
)

_DELETECOMMITREQUEST = _descriptor.Descriptor(
  name='DeleteCommitRequest',
  full_name='ai.verta.modeldb.versioning.DeleteCommitRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='ai.verta.modeldb.versioning.DeleteCommitRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_sha', full_name='ai.verta.modeldb.versioning.DeleteCommitRequest.commit_sha', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_DELETECOMMITREQUEST_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2959,
  serialized_end=3090,
)


_LISTCOMMITBLOBSREQUEST_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.ListCommitBlobsRequest.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='blobs', full_name='ai.verta.modeldb.versioning.ListCommitBlobsRequest.Response.blobs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3299,
  serialized_end=3367,
)

_LISTCOMMITBLOBSREQUEST = _descriptor.Descriptor(
  name='ListCommitBlobsRequest',
  full_name='ai.verta.modeldb.versioning.ListCommitBlobsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='ai.verta.modeldb.versioning.ListCommitBlobsRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pagination', full_name='ai.verta.modeldb.versioning.ListCommitBlobsRequest.pagination', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_sha', full_name='ai.verta.modeldb.versioning.ListCommitBlobsRequest.commit_sha', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='path_prefix', full_name='ai.verta.modeldb.versioning.ListCommitBlobsRequest.path_prefix', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_LISTCOMMITBLOBSREQUEST_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3093,
  serialized_end=3367,
)


_GETCOMMITBLOBREQUEST_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.GetCommitBlobRequest.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='blob', full_name='ai.verta.modeldb.versioning.GetCommitBlobRequest.Response.blob', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3506,
  serialized_end=3565,
)

_GETCOMMITBLOBREQUEST = _descriptor.Descriptor(
  name='GetCommitBlobRequest',
  full_name='ai.verta.modeldb.versioning.GetCommitBlobRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='ai.verta.modeldb.versioning.GetCommitBlobRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_sha', full_name='ai.verta.modeldb.versioning.GetCommitBlobRequest.commit_sha', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='path', full_name='ai.verta.modeldb.versioning.GetCommitBlobRequest.path', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_GETCOMMITBLOBREQUEST_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3370,
  serialized_end=3565,
)


_GETCOMMITFOLDERREQUEST_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.GetCommitFolderRequest.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='folder', full_name='ai.verta.modeldb.versioning.GetCommitFolderRequest.Response.folder', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3706,
  serialized_end=3769,
)

_GETCOMMITFOLDERREQUEST = _descriptor.Descriptor(
  name='GetCommitFolderRequest',
  full_name='ai.verta.modeldb.versioning.GetCommitFolderRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='ai.verta.modeldb.versioning.GetCommitFolderRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_sha', full_name='ai.verta.modeldb.versioning.GetCommitFolderRequest.commit_sha', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='path', full_name='ai.verta.modeldb.versioning.GetCommitFolderRequest.path', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_GETCOMMITFOLDERREQUEST_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3568,
  serialized_end=3769,
)


_COMPUTEREPOSITORYDIFFREQUEST_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.ComputeRepositoryDiffRequest.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='diffs', full_name='ai.verta.modeldb.versioning.ComputeRepositoryDiffRequest.Response.diffs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3939,
  serialized_end=4003,
)

_COMPUTEREPOSITORYDIFFREQUEST = _descriptor.Descriptor(
  name='ComputeRepositoryDiffRequest',
  full_name='ai.verta.modeldb.versioning.ComputeRepositoryDiffRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='ai.verta.modeldb.versioning.ComputeRepositoryDiffRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_a', full_name='ai.verta.modeldb.versioning.ComputeRepositoryDiffRequest.commit_a', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_b', full_name='ai.verta.modeldb.versioning.ComputeRepositoryDiffRequest.commit_b', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='path_prefix', full_name='ai.verta.modeldb.versioning.ComputeRepositoryDiffRequest.path_prefix', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_COMPUTEREPOSITORYDIFFREQUEST_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3772,
  serialized_end=4003,
)


_LISTTAGSREQUEST_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.ListTagsRequest.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tags', full_name='ai.verta.modeldb.versioning.ListTagsRequest.Response.tags', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4102,
  serialized_end=4126,
)

_LISTTAGSREQUEST = _descriptor.Descriptor(
  name='ListTagsRequest',
  full_name='ai.verta.modeldb.versioning.ListTagsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='ai.verta.modeldb.versioning.ListTagsRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_LISTTAGSREQUEST_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4005,
  serialized_end=4126,
)


_GETTAGREQUEST_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.GetTagRequest.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='commit', full_name='ai.verta.modeldb.versioning.GetTagRequest.Response.commit', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2615,
  serialized_end=2678,
)

_GETTAGREQUEST = _descriptor.Descriptor(
  name='GetTagRequest',
  full_name='ai.verta.modeldb.versioning.GetTagRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='ai.verta.modeldb.versioning.GetTagRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tag', full_name='ai.verta.modeldb.versioning.GetTagRequest.tag', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_GETTAGREQUEST_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4129,
  serialized_end=4300,
)


_SETTAGREQUEST_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.SetTagRequest.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1642,
  serialized_end=1652,
)

_SETTAGREQUEST = _descriptor.Descriptor(
  name='SetTagRequest',
  full_name='ai.verta.modeldb.versioning.SetTagRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='ai.verta.modeldb.versioning.SetTagRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tag', full_name='ai.verta.modeldb.versioning.SetTagRequest.tag', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='commit_sha', full_name='ai.verta.modeldb.versioning.SetTagRequest.commit_sha', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_SETTAGREQUEST_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4303,
  serialized_end=4441,
)


_DELETETAGREQUEST_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='ai.verta.modeldb.versioning.DeleteTagRequest.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1642,
  serialized_end=1652,
)

_DELETETAGREQUEST = _descriptor.Descriptor(
  name='DeleteTagRequest',
  full_name='ai.verta.modeldb.versioning.DeleteTagRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='repository_id', full_name='ai.verta.modeldb.versioning.DeleteTagRequest.repository_id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tag', full_name='ai.verta.modeldb.versioning.DeleteTagRequest.tag', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_DELETETAGREQUEST_RESPONSE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4443,
  serialized_end=4564,
)

_INTERNALFOLDER.fields_by_name['blobs'].message_type = _INTERNALFOLDERELEMENT
_INTERNALFOLDER.fields_by_name['subfolders'].message_type = _INTERNALFOLDERELEMENT
_FOLDER.fields_by_name['blobs'].message_type = _FOLDERELEMENT
_FOLDER.fields_by_name['subfolders'].message_type = _FOLDERELEMENT
_BLOB.fields_by_name['dataset'].message_type = protos_dot_public_dot_modeldb_dot_versioning_dot_Dataset__pb2._DATASETBLOB
_BLOB.oneofs_by_name['content'].fields.append(
  _BLOB.fields_by_name['dataset'])
_BLOB.fields_by_name['dataset'].containing_oneof = _BLOB.oneofs_by_name['content']
_BLOBEXPANDED.fields_by_name['blob'].message_type = _BLOB
_BLOBDIFF.fields_by_name['dataset'].message_type = protos_dot_public_dot_modeldb_dot_versioning_dot_Dataset__pb2._DATASETDIFF
_BLOBDIFF.oneofs_by_name['content'].fields.append(
  _BLOBDIFF.fields_by_name['dataset'])
_BLOBDIFF.fields_by_name['dataset'].containing_oneof = _BLOBDIFF.oneofs_by_name['content']
_REPOSITORY.fields_by_name['workspace_type'].enum_type = protos_dot_public_dot_modeldb_dot_CommonService__pb2._WORKSPACETYPEENUM_WORKSPACETYPE
_REPOSITORYIDENTIFICATION.fields_by_name['named'].message_type = _REPOSITORYNAMEDIDENTIFICATION
_REPOSITORYIDENTIFICATION.oneofs_by_name['id'].fields.append(
  _REPOSITORYIDENTIFICATION.fields_by_name['named'])
_REPOSITORYIDENTIFICATION.fields_by_name['named'].containing_oneof = _REPOSITORYIDENTIFICATION.oneofs_by_name['id']
_REPOSITORYIDENTIFICATION.oneofs_by_name['id'].fields.append(
  _REPOSITORYIDENTIFICATION.fields_by_name['code'])
_REPOSITORYIDENTIFICATION.fields_by_name['code'].containing_oneof = _REPOSITORYIDENTIFICATION.oneofs_by_name['id']
_LISTREPOSITORIESREQUEST_RESPONSE.fields_by_name['repository'].message_type = _REPOSITORY
_LISTREPOSITORIESREQUEST_RESPONSE.containing_type = _LISTREPOSITORIESREQUEST
_LISTREPOSITORIESREQUEST.fields_by_name['pagination'].message_type = _PAGINATION
_GETREPOSITORYREQUEST_RESPONSE.fields_by_name['repository'].message_type = _REPOSITORY
_GETREPOSITORYREQUEST_RESPONSE.containing_type = _GETREPOSITORYREQUEST
_GETREPOSITORYREQUEST.fields_by_name['id'].message_type = _REPOSITORYIDENTIFICATION
_SETREPOSITORY_RESPONSE.fields_by_name['repository'].message_type = _REPOSITORY
_SETREPOSITORY_RESPONSE.containing_type = _SETREPOSITORY
_SETREPOSITORY.fields_by_name['id'].message_type = _REPOSITORYIDENTIFICATION
_SETREPOSITORY.fields_by_name['repository'].message_type = _REPOSITORY
_DELETEREPOSITORYREQUEST_RESPONSE.containing_type = _DELETEREPOSITORYREQUEST
_DELETEREPOSITORYREQUEST.fields_by_name['id'].message_type = _REPOSITORYIDENTIFICATION
_LISTCOMMITSREQUEST_RESPONSE.fields_by_name['commits'].message_type = _COMMIT
_LISTCOMMITSREQUEST_RESPONSE.containing_type = _LISTCOMMITSREQUEST
_LISTCOMMITSREQUEST.fields_by_name['repository_id'].message_type = _REPOSITORYIDENTIFICATION
_LISTCOMMITSREQUEST.fields_by_name['pagination'].message_type = _PAGINATION
_GETCOMMITREQUEST_RESPONSE.fields_by_name['commit'].message_type = _COMMIT
_GETCOMMITREQUEST_RESPONSE.containing_type = _GETCOMMITREQUEST
_GETCOMMITREQUEST.fields_by_name['repository_id'].message_type = _REPOSITORYIDENTIFICATION
_CREATECOMMITREQUEST_RESPONSE.fields_by_name['commit'].message_type = _COMMIT
_CREATECOMMITREQUEST_RESPONSE.containing_type = _CREATECOMMITREQUEST
_CREATECOMMITREQUEST.fields_by_name['repository_id'].message_type = _REPOSITORYIDENTIFICATION
_CREATECOMMITREQUEST.fields_by_name['commit'].message_type = _COMMIT
_CREATECOMMITREQUEST.fields_by_name['blobs'].message_type = _BLOBEXPANDED
_DELETECOMMITREQUEST_RESPONSE.containing_type = _DELETECOMMITREQUEST
_DELETECOMMITREQUEST.fields_by_name['repository_id'].message_type = _REPOSITORYIDENTIFICATION
_LISTCOMMITBLOBSREQUEST_RESPONSE.fields_by_name['blobs'].message_type = _BLOBEXPANDED
_LISTCOMMITBLOBSREQUEST_RESPONSE.containing_type = _LISTCOMMITBLOBSREQUEST
_LISTCOMMITBLOBSREQUEST.fields_by_name['repository_id'].message_type = _REPOSITORYIDENTIFICATION
_LISTCOMMITBLOBSREQUEST.fields_by_name['pagination'].message_type = _PAGINATION
_GETCOMMITBLOBREQUEST_RESPONSE.fields_by_name['blob'].message_type = _BLOB
_GETCOMMITBLOBREQUEST_RESPONSE.containing_type = _GETCOMMITBLOBREQUEST
_GETCOMMITBLOBREQUEST.fields_by_name['repository_id'].message_type = _REPOSITORYIDENTIFICATION
_GETCOMMITFOLDERREQUEST_RESPONSE.fields_by_name['folder'].message_type = _FOLDER
_GETCOMMITFOLDERREQUEST_RESPONSE.containing_type = _GETCOMMITFOLDERREQUEST
_GETCOMMITFOLDERREQUEST.fields_by_name['repository_id'].message_type = _REPOSITORYIDENTIFICATION
_COMPUTEREPOSITORYDIFFREQUEST_RESPONSE.fields_by_name['diffs'].message_type = _BLOBDIFF
_COMPUTEREPOSITORYDIFFREQUEST_RESPONSE.containing_type = _COMPUTEREPOSITORYDIFFREQUEST
_COMPUTEREPOSITORYDIFFREQUEST.fields_by_name['repository_id'].message_type = _REPOSITORYIDENTIFICATION
_LISTTAGSREQUEST_RESPONSE.containing_type = _LISTTAGSREQUEST
_LISTTAGSREQUEST.fields_by_name['repository_id'].message_type = _REPOSITORYIDENTIFICATION
_GETTAGREQUEST_RESPONSE.fields_by_name['commit'].message_type = _COMMIT
_GETTAGREQUEST_RESPONSE.containing_type = _GETTAGREQUEST
_GETTAGREQUEST.fields_by_name['repository_id'].message_type = _REPOSITORYIDENTIFICATION
_SETTAGREQUEST_RESPONSE.containing_type = _SETTAGREQUEST
_SETTAGREQUEST.fields_by_name['repository_id'].message_type = _REPOSITORYIDENTIFICATION
_DELETETAGREQUEST_RESPONSE.containing_type = _DELETETAGREQUEST
_DELETETAGREQUEST.fields_by_name['repository_id'].message_type = _REPOSITORYIDENTIFICATION
DESCRIPTOR.message_types_by_name['InternalCommit'] = _INTERNALCOMMIT
DESCRIPTOR.message_types_by_name['Commit'] = _COMMIT
DESCRIPTOR.message_types_by_name['InternalFolderElement'] = _INTERNALFOLDERELEMENT
DESCRIPTOR.message_types_by_name['InternalFolder'] = _INTERNALFOLDER
DESCRIPTOR.message_types_by_name['FolderElement'] = _FOLDERELEMENT
DESCRIPTOR.message_types_by_name['Folder'] = _FOLDER
DESCRIPTOR.message_types_by_name['Blob'] = _BLOB
DESCRIPTOR.message_types_by_name['BlobExpanded'] = _BLOBEXPANDED
DESCRIPTOR.message_types_by_name['BlobDiff'] = _BLOBDIFF
DESCRIPTOR.message_types_by_name['Repository'] = _REPOSITORY
DESCRIPTOR.message_types_by_name['Pagination'] = _PAGINATION
DESCRIPTOR.message_types_by_name['RepositoryNamedIdentification'] = _REPOSITORYNAMEDIDENTIFICATION
DESCRIPTOR.message_types_by_name['RepositoryIdentification'] = _REPOSITORYIDENTIFICATION
DESCRIPTOR.message_types_by_name['ListRepositoriesRequest'] = _LISTREPOSITORIESREQUEST
DESCRIPTOR.message_types_by_name['GetRepositoryRequest'] = _GETREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['SetRepository'] = _SETREPOSITORY
DESCRIPTOR.message_types_by_name['DeleteRepositoryRequest'] = _DELETEREPOSITORYREQUEST
DESCRIPTOR.message_types_by_name['ListCommitsRequest'] = _LISTCOMMITSREQUEST
DESCRIPTOR.message_types_by_name['GetCommitRequest'] = _GETCOMMITREQUEST
DESCRIPTOR.message_types_by_name['CreateCommitRequest'] = _CREATECOMMITREQUEST
DESCRIPTOR.message_types_by_name['DeleteCommitRequest'] = _DELETECOMMITREQUEST
DESCRIPTOR.message_types_by_name['ListCommitBlobsRequest'] = _LISTCOMMITBLOBSREQUEST
DESCRIPTOR.message_types_by_name['GetCommitBlobRequest'] = _GETCOMMITBLOBREQUEST
DESCRIPTOR.message_types_by_name['GetCommitFolderRequest'] = _GETCOMMITFOLDERREQUEST
DESCRIPTOR.message_types_by_name['ComputeRepositoryDiffRequest'] = _COMPUTEREPOSITORYDIFFREQUEST
DESCRIPTOR.message_types_by_name['ListTagsRequest'] = _LISTTAGSREQUEST
DESCRIPTOR.message_types_by_name['GetTagRequest'] = _GETTAGREQUEST
DESCRIPTOR.message_types_by_name['SetTagRequest'] = _SETTAGREQUEST
DESCRIPTOR.message_types_by_name['DeleteTagRequest'] = _DELETETAGREQUEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

InternalCommit = _reflection.GeneratedProtocolMessageType('InternalCommit', (_message.Message,), dict(
  DESCRIPTOR = _INTERNALCOMMIT,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.InternalCommit)
  ))
_sym_db.RegisterMessage(InternalCommit)

Commit = _reflection.GeneratedProtocolMessageType('Commit', (_message.Message,), dict(
  DESCRIPTOR = _COMMIT,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.Commit)
  ))
_sym_db.RegisterMessage(Commit)

InternalFolderElement = _reflection.GeneratedProtocolMessageType('InternalFolderElement', (_message.Message,), dict(
  DESCRIPTOR = _INTERNALFOLDERELEMENT,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.InternalFolderElement)
  ))
_sym_db.RegisterMessage(InternalFolderElement)

InternalFolder = _reflection.GeneratedProtocolMessageType('InternalFolder', (_message.Message,), dict(
  DESCRIPTOR = _INTERNALFOLDER,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.InternalFolder)
  ))
_sym_db.RegisterMessage(InternalFolder)

FolderElement = _reflection.GeneratedProtocolMessageType('FolderElement', (_message.Message,), dict(
  DESCRIPTOR = _FOLDERELEMENT,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.FolderElement)
  ))
_sym_db.RegisterMessage(FolderElement)

Folder = _reflection.GeneratedProtocolMessageType('Folder', (_message.Message,), dict(
  DESCRIPTOR = _FOLDER,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.Folder)
  ))
_sym_db.RegisterMessage(Folder)

Blob = _reflection.GeneratedProtocolMessageType('Blob', (_message.Message,), dict(
  DESCRIPTOR = _BLOB,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.Blob)
  ))
_sym_db.RegisterMessage(Blob)

BlobExpanded = _reflection.GeneratedProtocolMessageType('BlobExpanded', (_message.Message,), dict(
  DESCRIPTOR = _BLOBEXPANDED,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.BlobExpanded)
  ))
_sym_db.RegisterMessage(BlobExpanded)

BlobDiff = _reflection.GeneratedProtocolMessageType('BlobDiff', (_message.Message,), dict(
  DESCRIPTOR = _BLOBDIFF,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.BlobDiff)
  ))
_sym_db.RegisterMessage(BlobDiff)

Repository = _reflection.GeneratedProtocolMessageType('Repository', (_message.Message,), dict(
  DESCRIPTOR = _REPOSITORY,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.Repository)
  ))
_sym_db.RegisterMessage(Repository)

Pagination = _reflection.GeneratedProtocolMessageType('Pagination', (_message.Message,), dict(
  DESCRIPTOR = _PAGINATION,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.Pagination)
  ))
_sym_db.RegisterMessage(Pagination)

RepositoryNamedIdentification = _reflection.GeneratedProtocolMessageType('RepositoryNamedIdentification', (_message.Message,), dict(
  DESCRIPTOR = _REPOSITORYNAMEDIDENTIFICATION,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.RepositoryNamedIdentification)
  ))
_sym_db.RegisterMessage(RepositoryNamedIdentification)

RepositoryIdentification = _reflection.GeneratedProtocolMessageType('RepositoryIdentification', (_message.Message,), dict(
  DESCRIPTOR = _REPOSITORYIDENTIFICATION,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.RepositoryIdentification)
  ))
_sym_db.RegisterMessage(RepositoryIdentification)

ListRepositoriesRequest = _reflection.GeneratedProtocolMessageType('ListRepositoriesRequest', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _LISTREPOSITORIESREQUEST_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.ListRepositoriesRequest.Response)
    ))
  ,
  DESCRIPTOR = _LISTREPOSITORIESREQUEST,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.ListRepositoriesRequest)
  ))
_sym_db.RegisterMessage(ListRepositoriesRequest)
_sym_db.RegisterMessage(ListRepositoriesRequest.Response)

GetRepositoryRequest = _reflection.GeneratedProtocolMessageType('GetRepositoryRequest', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _GETREPOSITORYREQUEST_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.GetRepositoryRequest.Response)
    ))
  ,
  DESCRIPTOR = _GETREPOSITORYREQUEST,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.GetRepositoryRequest)
  ))
_sym_db.RegisterMessage(GetRepositoryRequest)
_sym_db.RegisterMessage(GetRepositoryRequest.Response)

SetRepository = _reflection.GeneratedProtocolMessageType('SetRepository', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _SETREPOSITORY_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.SetRepository.Response)
    ))
  ,
  DESCRIPTOR = _SETREPOSITORY,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.SetRepository)
  ))
_sym_db.RegisterMessage(SetRepository)
_sym_db.RegisterMessage(SetRepository.Response)

DeleteRepositoryRequest = _reflection.GeneratedProtocolMessageType('DeleteRepositoryRequest', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _DELETEREPOSITORYREQUEST_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.DeleteRepositoryRequest.Response)
    ))
  ,
  DESCRIPTOR = _DELETEREPOSITORYREQUEST,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.DeleteRepositoryRequest)
  ))
_sym_db.RegisterMessage(DeleteRepositoryRequest)
_sym_db.RegisterMessage(DeleteRepositoryRequest.Response)

ListCommitsRequest = _reflection.GeneratedProtocolMessageType('ListCommitsRequest', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _LISTCOMMITSREQUEST_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.ListCommitsRequest.Response)
    ))
  ,
  DESCRIPTOR = _LISTCOMMITSREQUEST,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.ListCommitsRequest)
  ))
_sym_db.RegisterMessage(ListCommitsRequest)
_sym_db.RegisterMessage(ListCommitsRequest.Response)

GetCommitRequest = _reflection.GeneratedProtocolMessageType('GetCommitRequest', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _GETCOMMITREQUEST_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.GetCommitRequest.Response)
    ))
  ,
  DESCRIPTOR = _GETCOMMITREQUEST,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.GetCommitRequest)
  ))
_sym_db.RegisterMessage(GetCommitRequest)
_sym_db.RegisterMessage(GetCommitRequest.Response)

CreateCommitRequest = _reflection.GeneratedProtocolMessageType('CreateCommitRequest', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _CREATECOMMITREQUEST_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.CreateCommitRequest.Response)
    ))
  ,
  DESCRIPTOR = _CREATECOMMITREQUEST,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.CreateCommitRequest)
  ))
_sym_db.RegisterMessage(CreateCommitRequest)
_sym_db.RegisterMessage(CreateCommitRequest.Response)

DeleteCommitRequest = _reflection.GeneratedProtocolMessageType('DeleteCommitRequest', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _DELETECOMMITREQUEST_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.DeleteCommitRequest.Response)
    ))
  ,
  DESCRIPTOR = _DELETECOMMITREQUEST,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.DeleteCommitRequest)
  ))
_sym_db.RegisterMessage(DeleteCommitRequest)
_sym_db.RegisterMessage(DeleteCommitRequest.Response)

ListCommitBlobsRequest = _reflection.GeneratedProtocolMessageType('ListCommitBlobsRequest', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _LISTCOMMITBLOBSREQUEST_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.ListCommitBlobsRequest.Response)
    ))
  ,
  DESCRIPTOR = _LISTCOMMITBLOBSREQUEST,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.ListCommitBlobsRequest)
  ))
_sym_db.RegisterMessage(ListCommitBlobsRequest)
_sym_db.RegisterMessage(ListCommitBlobsRequest.Response)

GetCommitBlobRequest = _reflection.GeneratedProtocolMessageType('GetCommitBlobRequest', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _GETCOMMITBLOBREQUEST_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.GetCommitBlobRequest.Response)
    ))
  ,
  DESCRIPTOR = _GETCOMMITBLOBREQUEST,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.GetCommitBlobRequest)
  ))
_sym_db.RegisterMessage(GetCommitBlobRequest)
_sym_db.RegisterMessage(GetCommitBlobRequest.Response)

GetCommitFolderRequest = _reflection.GeneratedProtocolMessageType('GetCommitFolderRequest', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _GETCOMMITFOLDERREQUEST_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.GetCommitFolderRequest.Response)
    ))
  ,
  DESCRIPTOR = _GETCOMMITFOLDERREQUEST,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.GetCommitFolderRequest)
  ))
_sym_db.RegisterMessage(GetCommitFolderRequest)
_sym_db.RegisterMessage(GetCommitFolderRequest.Response)

ComputeRepositoryDiffRequest = _reflection.GeneratedProtocolMessageType('ComputeRepositoryDiffRequest', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _COMPUTEREPOSITORYDIFFREQUEST_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.ComputeRepositoryDiffRequest.Response)
    ))
  ,
  DESCRIPTOR = _COMPUTEREPOSITORYDIFFREQUEST,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.ComputeRepositoryDiffRequest)
  ))
_sym_db.RegisterMessage(ComputeRepositoryDiffRequest)
_sym_db.RegisterMessage(ComputeRepositoryDiffRequest.Response)

ListTagsRequest = _reflection.GeneratedProtocolMessageType('ListTagsRequest', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _LISTTAGSREQUEST_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.ListTagsRequest.Response)
    ))
  ,
  DESCRIPTOR = _LISTTAGSREQUEST,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.ListTagsRequest)
  ))
_sym_db.RegisterMessage(ListTagsRequest)
_sym_db.RegisterMessage(ListTagsRequest.Response)

GetTagRequest = _reflection.GeneratedProtocolMessageType('GetTagRequest', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _GETTAGREQUEST_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.GetTagRequest.Response)
    ))
  ,
  DESCRIPTOR = _GETTAGREQUEST,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.GetTagRequest)
  ))
_sym_db.RegisterMessage(GetTagRequest)
_sym_db.RegisterMessage(GetTagRequest.Response)

SetTagRequest = _reflection.GeneratedProtocolMessageType('SetTagRequest', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _SETTAGREQUEST_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.SetTagRequest.Response)
    ))
  ,
  DESCRIPTOR = _SETTAGREQUEST,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.SetTagRequest)
  ))
_sym_db.RegisterMessage(SetTagRequest)
_sym_db.RegisterMessage(SetTagRequest.Response)

DeleteTagRequest = _reflection.GeneratedProtocolMessageType('DeleteTagRequest', (_message.Message,), dict(

  Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
    DESCRIPTOR = _DELETETAGREQUEST_RESPONSE,
    __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
    # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.DeleteTagRequest.Response)
    ))
  ,
  DESCRIPTOR = _DELETETAGREQUEST,
  __module__ = 'protos.public.modeldb.versioning.VersioningService_pb2'
  # @@protoc_insertion_point(class_scope:ai.verta.modeldb.versioning.DeleteTagRequest)
  ))
_sym_db.RegisterMessage(DeleteTagRequest)
_sym_db.RegisterMessage(DeleteTagRequest.Response)


DESCRIPTOR._options = None

_VERSIONINGSERVICE = _descriptor.ServiceDescriptor(
  name='VersioningService',
  full_name='ai.verta.modeldb.versioning.VersioningService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=4567,
  serialized_end=9754,
  methods=[
  _descriptor.MethodDescriptor(
    name='ListRepositories',
    full_name='ai.verta.modeldb.versioning.VersioningService.ListRepositories',
    index=0,
    containing_service=None,
    input_type=_LISTREPOSITORIESREQUEST,
    output_type=_LISTREPOSITORIESREQUEST_RESPONSE,
    serialized_options=_b('\202\323\344\223\002X\0227/v1/versioning/workspaces/{workspace_name}/repositoriesZ\035\022\033/v1/versioning/repositories'),
  ),
  _descriptor.MethodDescriptor(
    name='GetRepository',
    full_name='ai.verta.modeldb.versioning.VersioningService.GetRepository',
    index=1,
    containing_service=None,
    input_type=_GETREPOSITORYREQUEST,
    output_type=_GETREPOSITORYREQUEST_RESPONSE,
    serialized_options=_b('\202\323\344\223\002{\022P/v1/versioning/workspaces/{id.named.workspace_name}/repositories/{id.named.name}Z\'\022%/v1/versioning/repositories/{id.code}'),
  ),
  _descriptor.MethodDescriptor(
    name='CreateRepository',
    full_name='ai.verta.modeldb.versioning.VersioningService.CreateRepository',
    index=2,
    containing_service=None,
    input_type=_SETREPOSITORY,
    output_type=_SETREPOSITORY_RESPONSE,
    serialized_options=_b('\202\323\344\223\002N\"@/v1/versioning/workspaces/{id.named.workspace_name}/repositories:\nrepository'),
  ),
  _descriptor.MethodDescriptor(
    name='UpdateRepository',
    full_name='ai.verta.modeldb.versioning.VersioningService.UpdateRepository',
    index=3,
    containing_service=None,
    input_type=_SETREPOSITORY,
    output_type=_SETREPOSITORY_RESPONSE,
    serialized_options=_b('\202\323\344\223\002\223\001\032P/v1/versioning/workspaces/{id.named.workspace_name}/repositories/{id.named.name}:\nrepositoryZ3\032%/v1/versioning/repositories/{id.code}:\nrepository'),
  ),
  _descriptor.MethodDescriptor(
    name='DeleteRepository',
    full_name='ai.verta.modeldb.versioning.VersioningService.DeleteRepository',
    index=4,
    containing_service=None,
    input_type=_DELETEREPOSITORYREQUEST,
    output_type=_DELETEREPOSITORYREQUEST_RESPONSE,
    serialized_options=_b('\202\323\344\223\002{*P/v1/versioning/workspaces/{id.named.workspace_name}/repositories/{id.named.name}Z\'*%/v1/versioning/repositories/{id.code}'),
  ),
  _descriptor.MethodDescriptor(
    name='ListCommits',
    full_name='ai.verta.modeldb.versioning.VersioningService.ListCommits',
    index=5,
    containing_service=None,
    input_type=_LISTCOMMITSREQUEST,
    output_type=_LISTCOMMITSREQUEST_RESPONSE,
    serialized_options=_b('\202\323\344\223\002\254\001\022n/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/commitsZ:\0228/v1/versioning/repositories/{repository_id.code}/commits'),
  ),
  _descriptor.MethodDescriptor(
    name='GetCommit',
    full_name='ai.verta.modeldb.versioning.VersioningService.GetCommit',
    index=6,
    containing_service=None,
    input_type=_GETCOMMITREQUEST,
    output_type=_GETCOMMITREQUEST_RESPONSE,
    serialized_options=_b('\202\323\344\223\002\306\001\022{/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/commits/{commit_sha}ZG\022E/v1/versioning/repositories/{repository_id.code}/commits/{commit_sha}'),
  ),
  _descriptor.MethodDescriptor(
    name='CreateCommit',
    full_name='ai.verta.modeldb.versioning.VersioningService.CreateCommit',
    index=7,
    containing_service=None,
    input_type=_CREATECOMMITREQUEST,
    output_type=_CREATECOMMITREQUEST_RESPONSE,
    serialized_options=_b('\202\323\344\223\002\262\001\"n/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/commits:\001*Z=\0328/v1/versioning/repositories/{repository_id.code}/commits:\001*'),
  ),
  _descriptor.MethodDescriptor(
    name='DeleteCommit',
    full_name='ai.verta.modeldb.versioning.VersioningService.DeleteCommit',
    index=8,
    containing_service=None,
    input_type=_DELETECOMMITREQUEST,
    output_type=_DELETECOMMITREQUEST_RESPONSE,
    serialized_options=_b('\202\323\344\223\002\306\001*{/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/commits/{commit_sha}ZG*E/v1/versioning/repositories/{repository_id.code}/commits/{commit_sha}'),
  ),
  _descriptor.MethodDescriptor(
    name='ListCommitBlobs',
    full_name='ai.verta.modeldb.versioning.VersioningService.ListCommitBlobs',
    index=9,
    containing_service=None,
    input_type=_LISTCOMMITBLOBSREQUEST,
    output_type=_LISTCOMMITBLOBSREQUEST_RESPONSE,
    serialized_options=_b('\202\323\344\223\002\323\001\022\201\001/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/commits/{commit_sha}/blobsZM\022K/v1/versioning/repositories/{repository_id.code}/commits/{commit_sha}/blobs'),
  ),
  _descriptor.MethodDescriptor(
    name='GetCommitBlob',
    full_name='ai.verta.modeldb.versioning.VersioningService.GetCommitBlob',
    index=10,
    containing_service=None,
    input_type=_GETCOMMITBLOBREQUEST,
    output_type=_GETCOMMITBLOBREQUEST_RESPONSE,
    serialized_options=_b('\202\323\344\223\002\347\001\022\213\001/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/commits/{commit_sha}/blobs/{path=**}ZW\022U/v1/versioning/repositories/{repository_id.code}/commits/{commit_sha}/blobs/{path=**}'),
  ),
  _descriptor.MethodDescriptor(
    name='GetCommitFolder',
    full_name='ai.verta.modeldb.versioning.VersioningService.GetCommitFolder',
    index=11,
    containing_service=None,
    input_type=_GETCOMMITFOLDERREQUEST,
    output_type=_GETCOMMITFOLDERREQUEST_RESPONSE,
    serialized_options=_b('\202\323\344\223\002\353\001\022\215\001/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/commits/{commit_sha}/folders/{path=**}ZY\022W/v1/versioning/repositories/{repository_id.code}/commits/{commit_sha}/folders/{path=**}'),
  ),
  _descriptor.MethodDescriptor(
    name='ComputeRepositoryDiff',
    full_name='ai.verta.modeldb.versioning.VersioningService.ComputeRepositoryDiff',
    index=12,
    containing_service=None,
    input_type=_COMPUTEREPOSITORYDIFFREQUEST,
    output_type=_COMPUTEREPOSITORYDIFFREQUEST_RESPONSE,
    serialized_options=_b('\202\323\344\223\002\246\001\022k/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/diffZ7\0225/v1/versioning/repositories/{repository_id.code}/diff'),
  ),
  _descriptor.MethodDescriptor(
    name='ListTags',
    full_name='ai.verta.modeldb.versioning.VersioningService.ListTags',
    index=13,
    containing_service=None,
    input_type=_LISTTAGSREQUEST,
    output_type=_LISTTAGSREQUEST_RESPONSE,
    serialized_options=_b('\202\323\344\223\002\246\001\022k/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/tagsZ7\0225/v1/versioning/repositories/{repository_id.code}/tags'),
  ),
  _descriptor.MethodDescriptor(
    name='GetTag',
    full_name='ai.verta.modeldb.versioning.VersioningService.GetTag',
    index=14,
    containing_service=None,
    input_type=_GETTAGREQUEST,
    output_type=_GETTAGREQUEST_RESPONSE,
    serialized_options=_b('\202\323\344\223\002\262\001\022q/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/tags/{tag}Z=\022;/v1/versioning/repositories/{repository_id.code}/tags/{tag}'),
  ),
  _descriptor.MethodDescriptor(
    name='SetTag',
    full_name='ai.verta.modeldb.versioning.VersioningService.SetTag',
    index=15,
    containing_service=None,
    input_type=_SETTAGREQUEST,
    output_type=_SETTAGREQUEST_RESPONSE,
    serialized_options=_b('\202\323\344\223\002\312\001\032q/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/tags/{tag}:\ncommit_shaZI\032;/v1/versioning/repositories/{repository_id.code}/tags/{tag}:\ncommit_sha'),
  ),
  _descriptor.MethodDescriptor(
    name='DeleteTag',
    full_name='ai.verta.modeldb.versioning.VersioningService.DeleteTag',
    index=16,
    containing_service=None,
    input_type=_DELETETAGREQUEST,
    output_type=_DELETETAGREQUEST_RESPONSE,
    serialized_options=_b('\202\323\344\223\002\262\001*q/v1/versioning/workspaces/{repository_id.named.workspace_name}/repositories/{repository_id.named.name}/tags/{tag}Z=*;/v1/versioning/repositories/{repository_id.code}/tags/{tag}'),
  ),
])
_sym_db.RegisterServiceDescriptor(_VERSIONINGSERVICE)

DESCRIPTOR.services_by_name['VersioningService'] = _VERSIONINGSERVICE

# @@protoc_insertion_point(module_scope)
