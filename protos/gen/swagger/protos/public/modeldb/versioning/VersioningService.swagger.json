{
  "swagger": "2.0",
  "info": {
    "title": "protos/public/modeldb/versioning/VersioningService.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/versioning/repositories": {
      "get": {
        "summary": "CRUD for repositories",
        "operationId": "ListRepositories2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningListRepositoriesRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace_name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      }
    },
    "/versioning/repositories/{id.repo_id}": {
      "get": {
        "operationId": "GetRepository2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningGetRepositoryRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id.repo_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "id.named_id.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.named_id.workspace_name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      },
      "put": {
        "operationId": "UpdateRepository2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningSetRepositoryResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id.repo_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/versioningRepository"
            }
          }
        ],
        "tags": [
          "VersioningService"
        ]
      }
    },
    "/versioning/repositories/{repository_id.repo_id}": {
      "delete": {
        "operationId": "DeleteRepository2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningDeleteRepositoryRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.repo_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      }
    },
    "/versioning/repositories/{repository_id.repo_id}/commits": {
      "get": {
        "summary": "CRUD for commits",
        "operationId": "ListCommits2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningListCommitsRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.repo_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "commit_base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "commit_head",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      },
      "post": {
        "operationId": "CreateCommit2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningCreateCommitRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.repo_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/versioningCreateCommitRequest"
            }
          }
        ],
        "tags": [
          "VersioningService"
        ]
      }
    },
    "/versioning/repositories/{repository_id.repo_id}/commits/{commit_sha}": {
      "get": {
        "operationId": "GetCommit2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningGetCommitRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.repo_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "commit_sha",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      },
      "delete": {
        "operationId": "DeleteCommit2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningDeleteCommitRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.repo_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "commit_sha",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      }
    },
    "/versioning/repositories/{repository_id.repo_id}/commits/{commit_sha}/blobs": {
      "get": {
        "summary": "Getting blobs and folders in a commit",
        "operationId": "ListCommitBlobs2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningListCommitBlobsRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.repo_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "commit_sha",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "location_prefix",
            "description": "List of folder names (with the last element potentially representing the blob name)\nThis will be used to limit the search to scope just this location, like `git log /my/path` would do.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      }
    },
    "/versioning/repositories/{repository_id.repo_id}/commits/{commit_sha}/path": {
      "get": {
        "operationId": "GetCommitComponent2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningGetCommitComponentRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.repo_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "commit_sha",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location",
            "description": "List of folder names, with the last element being the name of the blob\nthe last element determines if the response to be returned is Folder or Blob\nEach element goes one level deeper. So [\"foo\", \"bar\"] represents the same as /foo/bar.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      }
    },
    "/versioning/repositories/{repository_id.repo_id}/diff": {
      "get": {
        "summary": "Git-like operations",
        "operationId": "ComputeRepositoryDiff2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningComputeRepositoryDiffRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.repo_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "commit_a",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "commit_b",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location_prefix",
            "description": "List of folder names (with the last element potentially representing the blob name)\nThis will be used to limit the search to scope just this location, like `git log /my/path` would do.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      }
    },
    "/versioning/repositories/{repository_id.repo_id}/tags": {
      "get": {
        "summary": "CRUD for tags",
        "operationId": "ListTags2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningListTagsRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.repo_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      }
    },
    "/versioning/repositories/{repository_id.repo_id}/tags/{tag}": {
      "get": {
        "operationId": "GetTag2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningGetTagRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.repo_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      },
      "delete": {
        "operationId": "DeleteTag2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningDeleteTagRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.repo_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      },
      "put": {
        "operationId": "SetTag2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningSetTagRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.repo_id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "VersioningService"
        ]
      }
    },
    "/versioning/workspaces/{id.named_id.workspace_name}/repositories": {
      "post": {
        "operationId": "CreateRepository",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningSetRepositoryResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id.named_id.workspace_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/versioningRepository"
            }
          }
        ],
        "tags": [
          "VersioningService"
        ]
      }
    },
    "/versioning/workspaces/{id.named_id.workspace_name}/repositories/{id.named_id.name}": {
      "get": {
        "operationId": "GetRepository",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningGetRepositoryRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id.named_id.workspace_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.named_id.name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.repo_id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      },
      "put": {
        "operationId": "UpdateRepository",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningSetRepositoryResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id.named_id.workspace_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id.named_id.name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/versioningRepository"
            }
          }
        ],
        "tags": [
          "VersioningService"
        ]
      }
    },
    "/versioning/workspaces/{repository_id.named_id.workspace_name}/repositories/{repository_id.named_id.name}": {
      "delete": {
        "operationId": "DeleteRepository",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningDeleteRepositoryRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.repo_id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      }
    },
    "/versioning/workspaces/{repository_id.named_id.workspace_name}/repositories/{repository_id.named_id.name}/commits": {
      "get": {
        "summary": "CRUD for commits",
        "operationId": "ListCommits",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningListCommitsRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.repo_id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "commit_base",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "commit_head",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      },
      "post": {
        "operationId": "CreateCommit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningCreateCommitRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/versioningCreateCommitRequest"
            }
          }
        ],
        "tags": [
          "VersioningService"
        ]
      }
    },
    "/versioning/workspaces/{repository_id.named_id.workspace_name}/repositories/{repository_id.named_id.name}/commits/{commit_sha}": {
      "get": {
        "operationId": "GetCommit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningGetCommitRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "commit_sha",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.repo_id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      },
      "delete": {
        "operationId": "DeleteCommit",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningDeleteCommitRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "commit_sha",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.repo_id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      }
    },
    "/versioning/workspaces/{repository_id.named_id.workspace_name}/repositories/{repository_id.named_id.name}/commits/{commit_sha}/blobs": {
      "get": {
        "summary": "Getting blobs and folders in a commit",
        "operationId": "ListCommitBlobs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningListCommitBlobsRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "commit_sha",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.repo_id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "location_prefix",
            "description": "List of folder names (with the last element potentially representing the blob name)\nThis will be used to limit the search to scope just this location, like `git log /my/path` would do.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      }
    },
    "/versioning/workspaces/{repository_id.named_id.workspace_name}/repositories/{repository_id.named_id.name}/commits/{commit_sha}/path": {
      "get": {
        "operationId": "GetCommitComponent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningGetCommitComponentRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "commit_sha",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.repo_id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "location",
            "description": "List of folder names, with the last element being the name of the blob\nthe last element determines if the response to be returned is Folder or Blob\nEach element goes one level deeper. So [\"foo\", \"bar\"] represents the same as /foo/bar.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      }
    },
    "/versioning/workspaces/{repository_id.named_id.workspace_name}/repositories/{repository_id.named_id.name}/diff": {
      "get": {
        "summary": "Git-like operations",
        "operationId": "ComputeRepositoryDiff",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningComputeRepositoryDiffRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.repo_id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "commit_a",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "commit_b",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location_prefix",
            "description": "List of folder names (with the last element potentially representing the blob name)\nThis will be used to limit the search to scope just this location, like `git log /my/path` would do.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      }
    },
    "/versioning/workspaces/{repository_id.named_id.workspace_name}/repositories/{repository_id.named_id.name}/tags": {
      "get": {
        "summary": "CRUD for tags",
        "operationId": "ListTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningListTagsRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.repo_id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      }
    },
    "/versioning/workspaces/{repository_id.named_id.workspace_name}/repositories/{repository_id.named_id.name}/tags/{tag}": {
      "get": {
        "operationId": "GetTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningGetTagRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.repo_id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      },
      "delete": {
        "operationId": "DeleteTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningDeleteTagRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.repo_id",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      },
      "put": {
        "operationId": "SetTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningSetTagRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "repository_id.named_id.workspace_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repository_id.named_id.name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "VersioningService"
        ]
      }
    },
    "/versioning/workspaces/{workspace_name}/repositories": {
      "get": {
        "summary": "CRUD for repositories",
        "operationId": "ListRepositories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versioningListRepositoriesRequestResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "workspace_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pagination.page_number",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.page_limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "VersioningService"
        ]
      }
    }
  },
  "definitions": {
    "WorkspaceTypeEnumWorkspaceType": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "ORGANIZATION",
        "USER"
      ],
      "default": "UNKNOWN"
    },
    "versioningBlob": {
      "type": "object",
      "properties": {
        "dataset": {
          "$ref": "#/definitions/versioningDatasetBlob"
        },
        "environment": {
          "$ref": "#/definitions/versioningEnvironmentBlob"
        },
        "code": {
          "$ref": "#/definitions/versioningCodeBlob"
        },
        "config": {
          "$ref": "#/definitions/versioningConfigBlob"
        }
      }
    },
    "versioningBlobDiff": {
      "type": "object",
      "properties": {
        "location": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of folder names, with the last element being the name of the blob\nEach element goes one level deeper. So [\"foo\", \"bar\"] represents the same as /foo/bar"
        },
        "dataset": {
          "$ref": "#/definitions/versioningDatasetDiff"
        }
      }
    },
    "versioningBlobExpanded": {
      "type": "object",
      "properties": {
        "location": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of folder names, with the last element being the name of the blob\nEach element goes one level deeper. So [\"foo\", \"bar\"] represents the same as /foo/bar"
        },
        "blob": {
          "$ref": "#/definitions/versioningBlob"
        }
      }
    },
    "versioningCodeBlob": {
      "type": "object",
      "properties": {
        "git": {
          "$ref": "#/definitions/versioningGitCodeBlob"
        },
        "notebook": {
          "$ref": "#/definitions/versioningNotebookCodeBlob"
        }
      }
    },
    "versioningCommit": {
      "type": "object",
      "properties": {
        "parent_shas": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "ID of the parent commits."
        },
        "message": {
          "type": "string",
          "description": "Message associated with the commit."
        },
        "date_created": {
          "type": "string",
          "format": "uint64",
          "description": "Date associated with the commit.\nIt will be computed by the backend by default, but a feature flag should enable setting by the client."
        },
        "author": {
          "type": "string",
          "description": "ID of the user who created the commit."
        },
        "commit_sha": {
          "type": "string"
        }
      },
      "title": "Base commit for the versioning system\nDO NOT USE TO COMPUTE SHA"
    },
    "versioningComputeRepositoryDiffRequestResponse": {
      "type": "object",
      "properties": {
        "diffs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/versioningBlobDiff"
          }
        }
      }
    },
    "versioningConfigBlob": {
      "type": "object",
      "properties": {
        "hyperparameter_set": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/versioningHyperparameterSetConfigBlob"
          }
        },
        "hyperparameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/versioningHyperparameterConfigBlob"
          }
        }
      }
    },
    "versioningContinuousHyperparameterSetConfigBlob": {
      "type": "object",
      "properties": {
        "interval_begin": {
          "$ref": "#/definitions/versioningHyperparameterValuesConfigBlob"
        },
        "interval_end": {
          "$ref": "#/definitions/versioningHyperparameterValuesConfigBlob"
        },
        "interval_step": {
          "$ref": "#/definitions/versioningHyperparameterValuesConfigBlob"
        }
      }
    },
    "versioningCreateCommitRequest": {
      "type": "object",
      "properties": {
        "repository_id": {
          "$ref": "#/definitions/versioningRepositoryIdentification"
        },
        "commit": {
          "$ref": "#/definitions/versioningCommit"
        },
        "blobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/versioningBlobExpanded"
          }
        }
      }
    },
    "versioningCreateCommitRequestResponse": {
      "type": "object",
      "properties": {
        "commit": {
          "$ref": "#/definitions/versioningCommit"
        }
      }
    },
    "versioningDatasetBlob": {
      "type": "object",
      "properties": {
        "s3": {
          "$ref": "#/definitions/versioningS3DatasetBlob"
        },
        "path": {
          "$ref": "#/definitions/versioningPathDatasetBlob"
        }
      }
    },
    "versioningDatasetDiff": {
      "type": "object",
      "properties": {
        "s3": {
          "$ref": "#/definitions/versioningS3DatasetDiff"
        },
        "path": {
          "$ref": "#/definitions/versioningPathDatasetDiff"
        }
      }
    },
    "versioningDeleteCommitRequestResponse": {
      "type": "object"
    },
    "versioningDeleteRepositoryRequestResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "versioningDeleteTagRequestResponse": {
      "type": "object"
    },
    "versioningDiscreteHyperparameterSetConfigBlob": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/versioningHyperparameterValuesConfigBlob"
          }
        }
      }
    },
    "versioningDockerEnvironmentBlob": {
      "type": "object",
      "properties": {
        "repository": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "sha": {
          "type": "string"
        }
      }
    },
    "versioningEnvironmentBlob": {
      "type": "object",
      "properties": {
        "python": {
          "$ref": "#/definitions/versioningPythonEnvironmentBlob"
        },
        "docker": {
          "$ref": "#/definitions/versioningDockerEnvironmentBlob"
        },
        "environment_variables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/versioningEnvironmentVariablesBlob"
          }
        },
        "command_line": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "versioningEnvironmentVariablesBlob": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "versioningFolder": {
      "type": "object",
      "properties": {
        "blobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/versioningFolderElement"
          },
          "title": "Blobs, which correspond to direct entries/files"
        },
        "sub_folders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/versioningFolderElement"
          },
          "title": "Subfolders"
        }
      },
      "title": "DO NOT USE TO COMPUTE SHA"
    },
    "versioningFolderElement": {
      "type": "object",
      "properties": {
        "element_name": {
          "type": "string",
          "description": "Name of the element inside the folder."
        },
        "created_by_commit": {
          "type": "string",
          "description": "SHA of the commit which created this element."
        }
      },
      "title": "DO NOT USE TO COMPUTE SHA"
    },
    "versioningGetCommitComponentRequestResponse": {
      "type": "object",
      "properties": {
        "folder": {
          "$ref": "#/definitions/versioningFolder"
        },
        "blob": {
          "$ref": "#/definitions/versioningBlob"
        }
      }
    },
    "versioningGetCommitRequestResponse": {
      "type": "object",
      "properties": {
        "commit": {
          "$ref": "#/definitions/versioningCommit"
        }
      }
    },
    "versioningGetRepositoryRequestResponse": {
      "type": "object",
      "properties": {
        "repository": {
          "$ref": "#/definitions/versioningRepository"
        }
      }
    },
    "versioningGetTagRequestResponse": {
      "type": "object",
      "properties": {
        "commit": {
          "$ref": "#/definitions/versioningCommit"
        }
      }
    },
    "versioningGitCodeBlob": {
      "type": "object",
      "properties": {
        "repo": {
          "type": "string"
        },
        "hash": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "is_dirty": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "versioningHyperparameterConfigBlob": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/versioningHyperparameterValuesConfigBlob"
        }
      }
    },
    "versioningHyperparameterSetConfigBlob": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "continuous": {
          "$ref": "#/definitions/versioningContinuousHyperparameterSetConfigBlob"
        },
        "discrete": {
          "$ref": "#/definitions/versioningDiscreteHyperparameterSetConfigBlob"
        }
      }
    },
    "versioningHyperparameterValuesConfigBlob": {
      "type": "object",
      "properties": {
        "int_value": {
          "type": "string",
          "format": "int64"
        },
        "float_value": {
          "type": "number",
          "format": "float"
        },
        "string_value": {
          "type": "string"
        }
      }
    },
    "versioningListCommitBlobsRequestResponse": {
      "type": "object",
      "properties": {
        "blobs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/versioningBlobExpanded"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "versioningListCommitsRequestResponse": {
      "type": "object",
      "properties": {
        "commits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/versioningCommit"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "versioningListRepositoriesRequestResponse": {
      "type": "object",
      "properties": {
        "repositories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/versioningRepository"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "versioningListTagsRequestResponse": {
      "type": "object",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "total_records": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "versioningNotebookCodeBlob": {
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/versioningPathDatasetBlob"
        },
        "git_repo": {
          "$ref": "#/definitions/versioningGitCodeBlob"
        }
      }
    },
    "versioningPagination": {
      "type": "object",
      "properties": {
        "page_number": {
          "type": "integer",
          "format": "int32"
        },
        "page_limit": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "For pagination"
    },
    "versioningPathDatasetBlob": {
      "type": "object",
      "properties": {
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/versioningPathDatasetComponentBlob"
          }
        }
      }
    },
    "versioningPathDatasetComponentBlob": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "uint64"
        },
        "last_modified_at_source": {
          "type": "string",
          "format": "uint64"
        },
        "sha256": {
          "type": "string"
        },
        "md5": {
          "type": "string"
        }
      }
    },
    "versioningPathDatasetDiff": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean",
          "format": "boolean"
        },
        "added": {
          "type": "boolean",
          "format": "boolean"
        },
        "A": {
          "$ref": "#/definitions/versioningPathDatasetBlob",
          "description": "things are modified when they have same path but different metadata."
        },
        "B": {
          "$ref": "#/definitions/versioningPathDatasetBlob"
        }
      }
    },
    "versioningPythonEnvironmentBlob": {
      "type": "object",
      "properties": {
        "version": {
          "$ref": "#/definitions/versioningVersionEnvironmentBlob"
        },
        "requirements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/versioningPythonRequirementEnvironmentBlob"
          }
        },
        "constraints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/versioningPythonRequirementEnvironmentBlob"
          }
        }
      }
    },
    "versioningPythonRequirementEnvironmentBlob": {
      "type": "object",
      "properties": {
        "library": {
          "type": "string"
        },
        "constraint": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/versioningVersionEnvironmentBlob"
        }
      }
    },
    "versioningRepository": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uint64"
        },
        "name": {
          "type": "string"
        },
        "date_created": {
          "type": "string",
          "format": "uint64"
        },
        "date_updated": {
          "type": "string",
          "format": "uint64"
        },
        "workspace_id": {
          "type": "string"
        },
        "workspace_type": {
          "$ref": "#/definitions/WorkspaceTypeEnumWorkspaceType"
        }
      }
    },
    "versioningRepositoryIdentification": {
      "type": "object",
      "properties": {
        "named_id": {
          "$ref": "#/definitions/versioningRepositoryNamedIdentification"
        },
        "repo_id": {
          "type": "string",
          "format": "uint64"
        }
      },
      "title": "changed from oneof because of that bug: https://github.com/grpc-ecosystem/grpc-gateway/issues/753"
    },
    "versioningRepositoryNamedIdentification": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "workspace_name": {
          "type": "string"
        }
      },
      "title": "CRUD for repositories"
    },
    "versioningS3DatasetBlob": {
      "type": "object",
      "properties": {
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/versioningS3DatasetComponentBlob"
          }
        }
      }
    },
    "versioningS3DatasetComponentBlob": {
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/versioningPathDatasetComponentBlob"
        }
      }
    },
    "versioningS3DatasetDiff": {
      "type": "object",
      "properties": {
        "path": {
          "$ref": "#/definitions/versioningPathDatasetDiff"
        }
      }
    },
    "versioningSetRepositoryResponse": {
      "type": "object",
      "properties": {
        "repository": {
          "$ref": "#/definitions/versioningRepository"
        }
      }
    },
    "versioningSetTagRequestResponse": {
      "type": "object"
    },
    "versioningVersionEnvironmentBlob": {
      "type": "object",
      "properties": {
        "major": {
          "type": "integer",
          "format": "int32"
        },
        "minor": {
          "type": "integer",
          "format": "int32"
        },
        "patch": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "basePath": "/v1"
}
